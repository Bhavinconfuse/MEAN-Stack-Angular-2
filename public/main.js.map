{"version":3,"sources":["webpack:///./src/$_lazy_route_resource lazy namespace object","webpack:///./src/app/app-routing.module.ts","webpack:///./src/app/app.component.css","webpack:///./src/app/app.component.html","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/components/blog/blog.component.css","webpack:///./src/app/components/blog/blog.component.html","webpack:///./src/app/components/blog/blog.component.ts","webpack:///./src/app/components/blog/delete-blog/delete-blog.component.css","webpack:///./src/app/components/blog/delete-blog/delete-blog.component.html","webpack:///./src/app/components/blog/delete-blog/delete-blog.component.ts","webpack:///./src/app/components/blog/edit-blog/edit-blog.component.css","webpack:///./src/app/components/blog/edit-blog/edit-blog.component.html","webpack:///./src/app/components/blog/edit-blog/edit-blog.component.ts","webpack:///./src/app/components/dashboard/dashboard.component.css","webpack:///./src/app/components/dashboard/dashboard.component.html","webpack:///./src/app/components/dashboard/dashboard.component.ts","webpack:///./src/app/components/home/home.component.css","webpack:///./src/app/components/home/home.component.html","webpack:///./src/app/components/home/home.component.ts","webpack:///./src/app/components/login/login.component.css","webpack:///./src/app/components/login/login.component.html","webpack:///./src/app/components/login/login.component.ts","webpack:///./src/app/components/navbar/navbar.component.css","webpack:///./src/app/components/navbar/navbar.component.html","webpack:///./src/app/components/navbar/navbar.component.ts","webpack:///./src/app/components/profile/profile.component.css","webpack:///./src/app/components/profile/profile.component.html","webpack:///./src/app/components/profile/profile.component.ts","webpack:///./src/app/components/public-profile/public-profile.component.css","webpack:///./src/app/components/public-profile/public-profile.component.html","webpack:///./src/app/components/public-profile/public-profile.component.ts","webpack:///./src/app/components/register/register.component.css","webpack:///./src/app/components/register/register.component.html","webpack:///./src/app/components/register/register.component.ts","webpack:///./src/app/guards/auth.guard.ts","webpack:///./src/app/guards/notAuth.guard.ts","webpack:///./src/app/services/auth.service.ts","webpack:///./src/app/services/blog.service.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts"],"names":[],"mappings":";;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAE;AACF;AACA,4CAA4C,WAAW;AACvD;AACA;AACA,4E;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACZuD;AACd;AACwB;AACc;AACF;AACV;AACQ;AACkB;AAC5B;AACwB;AACL;AACpC;AACK;AAErD,gCAAgC;AAChC,IAAM,SAAS,GAAW;IACtB;QACI,IAAI,EAAE,EAAE;QACR,SAAS,EAAE,6EAAa,CAAC,iBAAiB;KAC7C;IACD;QACI,IAAI,EAAE,WAAW;QACjB,SAAS,EAAE,4FAAkB;QAC7B,WAAW,EAAE,CAAC,6DAAS,CAAC;KAC3B;IACD;QACI,IAAI,EAAE,UAAU;QAChB,SAAS,EAAE,yFAAiB;QAC5B,WAAW,EAAE,CAAC,mEAAY,CAAC;KAC9B;IACD;QACI,IAAI,EAAE,OAAO;QACb,SAAS,EAAE,gFAAc;QACzB,WAAW,EAAE,CAAC,mEAAY,CAAC;KAE9B;IACD;QACI,IAAI,EAAE,SAAS;QACf,SAAS,EAAE,sFAAgB;QAC3B,WAAW,EAAE,CAAC,6DAAS,CAAC;KAE3B;IACD;QACI,IAAI,EAAE,MAAM;QACZ,SAAS,EAAE,6EAAa;QACxB,WAAW,EAAE,CAAC,6DAAS,CAAC;KAC3B;IACD;QACI,IAAI,EAAE,eAAe;QACrB,SAAS,EAAE,iGAAiB;QAC5B,WAAW,EAAE,CAAC,6DAAS,CAAC;KAC3B;IACD;QACI,IAAI,EAAE,iBAAiB;QACvB,SAAS,EAAE,sGAAmB;QAC9B,WAAW,EAAE,CAAC,6DAAS,CAAC;KAC3B;IACD;QACI,IAAI,EAAE,gBAAgB;QACtB,SAAS,EAAE,0GAAsB;QACjC,WAAW,EAAE,CAAC,6DAAS,CAAC;KAC3B;IACD;QACI,IAAI,EAAE,IAAI;QACV,SAAS,EAAE,6EAAa,CAAC,wBAAwB;KACpD;CACJ,CAAC;AAUF;IAAA;IAAgC,CAAC;IAApB,gBAAgB;QAP5B,8DAAQ,CAAC;YACN,YAAY,EAAE,EAAE;YAChB,OAAO,EAAE,CAAC,4DAAY,CAAC,OAAO,CAAC,SAAS,CAAC,CAAC;YAC1C,SAAS,EAAE,EAAE;YACb,SAAS,EAAE,EAAE;YACb,OAAO,EAAE,CAAC,4DAAY,CAAC;SAC1B,CAAC;OACW,gBAAgB,CAAI;IAAD,uBAAC;CAAA;AAAJ;;;;;;;;;;;;AC5E7B,mB;;;;;;;;;;;ACAA,2K;;;;;;;;;;;;;;;;;;;;;ACA0C;AAO1C;IALA;QAME,UAAK,GAAG,4BAA4B,CAAC;IACvC,CAAC;IAFY,YAAY;QALxB,+DAAS,CAAC;YACT,QAAQ,EAAE,UAAU;;;SAGrB,CAAC;OACW,YAAY,CAExB;IAAD,mBAAC;CAAA;AAFwB;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACPiC;AACjB;AACG;AACY;AACH;AACC;AACP;AACwB;AACN;AACe;AACH;AACxB;AACC;AACc;AACM;AACjB;AACV;AACC;AACM;AACW;AACmB;AACM;AACI;AAKxF;IACJ,MAAM,CAAC,YAAY,CAAC,OAAO,CAAC,OAAO,CAAC,CAAC;AACvC,CAAC;AAkCD;IAAA;IAAyB,CAAC;IAAb,SAAS;QAhCrB,8DAAQ,CAAC;YACR,YAAY,EAAE;gBACZ,2DAAY;gBACZ,mFAAe;gBACf,6EAAa;gBACb,4FAAkB;gBAClB,yFAAiB;gBACjB,iFAAc;gBACd,uFAAgB;gBAChB,8EAAa;gBACb,iGAAiB;gBACjB,uGAAmB;gBACnB,2GAAsB;aACvB;YACD,OAAO,EAAE;gBACP,uEAAa;gBACb,oEAAgB;gBAChB,0DAAW;gBACX,kEAAmB;gBACnB,qEAAgB;gBAChB,wEAAqB,CAAC,OAAO,EAAE;gBAC/B,6DAAS,CAAC,OAAO,CAAC;oBAChB,MAAM,EAAC;wBACL,WAAW,EAAE,WAAW;qBAGzB;iBACF,CAAC;aACH;YACD,SAAS,EAAE,CAAC,mEAAW,EAAE,6DAAS,EAAE,mEAAY,EAAE,mEAAW,CAAC;YAC9D,SAAS,EAAE,CAAC,2DAAY,CAAC;SAC1B,CAAC;OACW,SAAS,CAAI;IAAD,gBAAC;CAAA;AAAJ;;;;;;;;;;;;AC/DtB,qDAAqD,kCAAkC,qBAAqB,sBAAsB,wBAAwB,qBAAqB,KAAK,sFAAsF,2BAA2B,8BAA8B,KAAK,qEAAqE,sBAAsB,2BAA2B,kCAAkC,yBAAyB,qDAAqD,mBAAmB,KAAK,4DAA4D,qBAAqB,2BAA2B,8BAA8B,uBAAuB,KAAK,gFAAgF,wBAAwB,gFAAgF,gBAAgB,6HAA6H,2BAA2B,C;;;;;;;;;;;ACA5kC,8KAA8K,SAAS,woBAAwoB,gHAAgH,k2BAAk2B,6GAA6G,wkCAAwkC,YAAY,iEAAiE,WAAW,4HAA4H,gBAAgB,kDAAkD,oCAAoC,0GAA0G,cAAc,uDAAuD,iBAAiB,8uBAA8uB,cAAc,kKAAkK,UAAU,sbAAsb,iBAAiB,iLAAiL,YAAY,8qBAA8qB,kLAAkL,yoCAAyoC,MAAM,oUAAoU,iUAAiU,sBAAsB,YAAY,mBAAmB,6F;;;;;;;;;;;;;;;;;;;;;;;;;;;ACAnmP;AAC6B;AACrB;AACD;AAOzD;IAgBE,uBACU,WAAwB,EACxB,WAAwB,EACxB,WAAwB;QAFxB,gBAAW,GAAX,WAAW,CAAa;QACxB,gBAAW,GAAX,WAAW,CAAa;QACxB,gBAAW,GAAX,WAAW,CAAa;QAdlC,YAAO,GAAG,KAAK,CAAC;QAChB,kBAAa,GAAI,KAAK,CAAC;QAGvB,eAAU,GAAG,KAAK,CAAC;QAGnB,eAAU,GAAG,EAAE,CAAC;QAChB,oBAAe,GAAE,EAAE,CAAC;QASlB,IAAI,CAAC,iBAAiB,EAAE,CAAC;QACzB,IAAI,CAAC,iBAAiB,EAAE,CAAC;IAE1B,CAAC;IAEF,yCAAiB,GAAjB;QACE,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC,WAAW,CAAC,KAAK,CAAC;YAC/B,KAAK,EAAC,CAAC,EAAE,EAAC,yDAAU,CAAC,OAAO,CAAC;oBAC3B,yDAAU,CAAC,QAAQ;oBACnB,yDAAU,CAAC,SAAS,CAAC,EAAE,CAAC;oBACxB,yDAAU,CAAC,SAAS,CAAC,CAAC,CAAC;oBACvB,IAAI,CAAC,sBAAsB;iBAC5B,CAAC,CAAC;YACH,IAAI,EAAE,CAAC,EAAE,EAAE,yDAAU,CAAC,OAAO,CAAC;oBAC5B,yDAAU,CAAC,QAAQ;oBACnB,yDAAU,CAAC,SAAS,CAAC,GAAG,CAAC;oBACzB,yDAAU,CAAC,SAAS,CAAC,CAAC,CAAC;iBACxB,CAAC,CAAC;SACN,CAAC,CAAC;IACL,CAAC;IAED,wCAAgB,GAAhB;QACE,IAAI,CAAC,WAAW,CAAC,GAAG,CAAC,SAAS,CAAC,CAAC,MAAM,EAAE,CAAC;IAC3C,CAAC;IACD,0CAAkB,GAAlB;QACE,IAAI,CAAC,WAAW,CAAC,GAAG,CAAC,SAAS,CAAC,CAAC,OAAO,EAAE,CAAC;IAC5C,CAAC;IAED,6CAAqB,GAArB;QACE,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,OAAO,CAAC,CAAC,MAAM,EAAE,CAAC;QAChC,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,MAAM,CAAC,CAAC,MAAM,EAAE,CAAC;IACjC,CAAC;IAED,8CAAsB,GAAtB;QACE,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,OAAO,CAAC,CAAC,OAAO,EAAE,CAAC;QACjC,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,MAAM,CAAC,CAAC,OAAO,EAAE,CAAC;IAClC,CAAC;IAED,8CAAsB,GAAtB,UAAuB,QAAQ;QAC7B,IAAM,MAAM,GAAI,IAAI,MAAM,CAAC,gBAAgB,CAAC,CAAC;QAC7C,EAAE,EAAC,MAAM,CAAC,IAAI,CAAC,QAAQ,CAAC,KAAK,CAAC,CAAC,EAAC;YAC9B,MAAM,CAAC,IAAI,CAAC;QACd,CAAC;QAAA,IAAI,EAAC;YACJ,MAAM,CAAC,EAAG,wBAAwB,EAAG,IAAI,EAAC;QAC5C,CAAC;IACH,CAAC;IAED,mCAAW,GAAX;QACE,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC;IACtB,CAAC;IAED,mCAAW,GAAX;QAAA,iBAMC;QALC,IAAI,CAAC,aAAa,GAAG,IAAI,CAAC;QAC1B,IAAI,CAAC,WAAW,EAAE,CAAC;QACnB,UAAU,CAAC;YACT,KAAI,CAAC,aAAa,GAAG,KAAK,CAAC;QAC7B,CAAC,EAAC,IAAI,CAAC;IACT,CAAC;IAED,oCAAY,GAAZ,UAAa,EAAE;QACb,IAAI,CAAC,WAAW,CAAC,KAAK,EAAE,CAAC;QACzB,IAAI,CAAC,UAAU,GAAG,EAAE,CAAC;QACrB,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC;IAC3B,CAAC;IAED,oCAAY,GAAZ;QAAA,iBA8BC;QA7BC,IAAI,CAAC,UAAU,GAAG,IAAI,CAAC;QACvB,IAAI,CAAC,sBAAsB,EAAE,CAAC;QAE9B,IAAM,IAAI,GAAG;YACX,KAAK,EAAE,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,OAAO,CAAC,CAAC,KAAK;YACnC,IAAI,EAAE,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,MAAM,CAAC,CAAC,KAAK;YACjC,SAAS,EAAE,IAAI,CAAC,QAAQ;SACzB;QAED,IAAI,CAAC,WAAW,CAAC,OAAO,CAAC,IAAI,CAAC,CAAC,SAAS,CAAC,UAAC,IAAU;YAChD,EAAE,EAAC,CAAC,IAAI,CAAC,OAAO,CAAC,EAAC;gBAChB,KAAI,CAAC,YAAY,GAAG,oBAAoB,CAAC;gBACzC,KAAI,CAAC,OAAO,GAAG,IAAI,CAAC,OAAO,CAAC;gBAC5B,KAAI,CAAC,UAAU,GAAG,KAAK,CAAC;gBACxB,KAAI,CAAC,qBAAqB,EAAE,CAAC;YAC/B,CAAC;YAAA,IAAI,EAAC;gBACJ,KAAI,CAAC,YAAY,GAAG,qBAAqB,CAAC;gBAC1C,KAAI,CAAC,OAAO,GAAI,IAAI,CAAC,OAAO,CAAC;gBAC7B,KAAI,CAAC,WAAW,EAAE,CAAC;gBACnB,UAAU,CAAC;oBACP,KAAI,CAAC,OAAO,GAAI,KAAK,CAAC;oBACtB,KAAI,CAAC,UAAU,GAAG,KAAK,CAAC;oBACxB,KAAI,CAAC,OAAO,GAAI,KAAK,CAAC;oBACtB,KAAI,CAAC,IAAI,CAAC,KAAK,EAAE,CAAC;oBAClB,KAAI,CAAC,qBAAqB,EAAE,CAAC;gBACjC,CAAC,EAAE,IAAI,CAAC,CAAC;YACX,CAAC;QACL,CAAC,CAAC,CAAC;IAEL,CAAC;IAED,8BAAM,GAAN;QACE,MAAM,CAAC,QAAQ,CAAC,MAAM,EAAE,CAAC;IAC3B,CAAC;IAED,mCAAW,GAAX;QAAA,iBAIC;QAHC,IAAI,CAAC,WAAW,CAAC,WAAW,EAAE,CAAC,SAAS,CAAC,UAAC,IAAU;YAClD,KAAI,CAAC,SAAS,GAAG,IAAI,CAAC,KAAK,CAAC;QAC9B,CAAC,CAAC,CAAC;IACL,CAAC;IAED,gCAAQ,GAAR,UAAS,EAAE;QAAX,iBAKC;QAHC,IAAI,CAAC,WAAW,CAAC,QAAQ,CAAC,EAAE,CAAC,CAAC,SAAS,CAAC,UAAC,IAAU;YACjD,KAAI,CAAC,WAAW,EAAE,CAAC;QACrB,CAAC,CAAC,CAAC;IACL,CAAC;IAED,mCAAW,GAAX,UAAY,EAAE;QAAd,iBAIC;QAHC,IAAI,CAAC,WAAW,CAAC,WAAW,CAAC,EAAE,CAAC,CAAC,SAAS,CAAC,UAAC,IAAU;YACpD,KAAI,CAAC,WAAW,EAAE,CAAC;QACrB,CAAC,CAAC,CAAC;IACL,CAAC;IAED,yCAAiB,GAAjB;QACE,IAAI,CAAC,WAAW,GAAG,IAAI,CAAC,WAAW,CAAC,KAAK,CAAC;YACxC,OAAO,EAAE,CAAC,EAAE,EAAE,yDAAU,CAAC,OAAO,CAAC;oBAC/B,yDAAU,CAAC,QAAQ;oBACnB,yDAAU,CAAC,SAAS,CAAC,GAAG,CAAC;oBACzB,yDAAU,CAAC,SAAS,CAAC,CAAC,CAAC;iBACxB,CAAC,CAAC;SACJ,CAAC;IACJ,CAAC;IACD,mCAAW,GAAX,UAAY,EAAE;QAAd,iBAeC;QAdC,IAAI,CAAC,kBAAkB,EAAE,CAAC;QAC1B,IAAI,CAAC,UAAU,GAAG,IAAI,CAAC;QACvB,IAAM,OAAO,GAAG,IAAI,CAAC,WAAW,CAAC,GAAG,CAAC,SAAS,CAAC,CAAC,KAAK,CAAC,CAAC,gCAAgC;QACvF,wBAAwB;QACxB,IAAI,CAAC,WAAW,CAAC,WAAW,CAAC,EAAE,EAAE,OAAO,CAAC,CAAC,SAAS,CAAC,UAAC,IAAU;YAC7D,qBAAqB;YACrB,KAAI,CAAC,WAAW,EAAE,CAAC;YACnB,IAAM,KAAK,GAAI,KAAI,CAAC,UAAU,CAAC,OAAO,CAAC,EAAE,CAAC,CAAC;YAC3C,KAAI,CAAC,UAAU,CAAC,MAAM,CAAC,KAAK,EAAE,CAAC,CAAC,CAAC;YACjC,KAAI,CAAC,gBAAgB,EAAE,CAAC;YACxB,KAAI,CAAC,WAAW,CAAC,KAAK,EAAE,CAAC;YACzB,KAAI,CAAC,UAAU,GAAI,KAAK,CAAC;YACzB,EAAE,EAAC,KAAI,CAAC,eAAe,CAAC,OAAO,CAAC,EAAE,CAAC,GAAG,CAAC,CAAC;gBAAC,KAAI,CAAC,MAAM,CAAC,EAAE,CAAC,CAAC;QAC3D,CAAC,CAAC;IACJ,CAAC;IACD,8BAAM,GAAN,UAAO,EAAE;QACP,IAAI,CAAC,eAAe,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC;IAChC,CAAC;IACD,gCAAQ,GAAR,UAAS,EAAE;QACT,IAAM,KAAK,GAAG,IAAI,CAAC,eAAe,CAAC,OAAO,CAAC,EAAE,CAAC,CAAC;QAC/C,IAAI,CAAC,eAAe,CAAC,MAAM,CAAC,KAAK,EAAE,CAAC,CAAC,CAAC;IACxC,CAAC;IAED,wCAAgB,GAAhB,UAAiB,EAAE;QACjB,IAAM,KAAK,GAAG,IAAI,CAAC,UAAU,CAAC,OAAO,CAAC,EAAE,CAAC,CAAC;QAC1C,IAAI,CAAC,UAAU,CAAC,MAAM,CAAC,KAAK,EAAE,CAAC,CAAC,CAAC;QACjC,IAAI,CAAC,WAAW,CAAC,KAAK,EAAE,CAAC;QACzB,IAAI,CAAC,gBAAgB,EAAE,CAAC;QACxB,IAAI,CAAC,UAAU,GAAG,KAAK,CAAC;IAC1B,CAAC;IACD,gCAAQ,GAAR;QAAA,iBAOC;QANC,IAAI,CAAC,WAAW,CAAC,UAAU,EAAE,CAAC,SAAS,CAAC,UAAC,OAAa;YACpD,OAAO,CAAC,GAAG,CAAC,OAAO,CAAC,CAAC;YACrB,KAAI,CAAC,QAAQ,GAAG,OAAO,CAAC,IAAI,CAAC,QAAQ,CAAC;QACxC,CAAC,CAAC,CAAC;QAEH,IAAI,CAAC,WAAW,EAAE,CAAC;IACrB,CAAC;IA7LU,aAAa;QALzB,+DAAS,CAAC;YACT,QAAQ,EAAE,UAAU;;;SAGrB,CAAC;yCAkBuB,0DAAW;YACX,kEAAW;YACX,kEAAW;OAnBvB,aAAa,CA+LzB;IAAD,oBAAC;CAAA;AA/LyB;;;;;;;;;;;;ACV1B,mB;;;;;;;;;;;ACAA,+JAA+J,SAAS,iOAAiO,wnBAAwnB,YAAY,6DAA6D,WAAW,oFAAoF,iBAAiB,+CAA+C,uCAAuC,2C;;;;;;;;;;;;;;;;;;;;;;;;;;ACA7tC;AACU;AACH;AAM1D;IASE,6BACU,WAAwB,EACxB,cAA8B,EAC9B,MAAc;QAFd,gBAAW,GAAX,WAAW,CAAa;QACxB,mBAAc,GAAd,cAAc,CAAgB;QAC9B,WAAM,GAAN,MAAM,CAAQ;QAPxB,cAAS,GAAI,KAAK,CAAC;QACnB,eAAU,GAAG,KAAK,CAAC;IAOf,CAAC;IAEL,wCAAU,GAAV;QAAA,iBAcC;QAbC,IAAI,CAAC,UAAU,GAAI,IAAI,CAAC;QACxB,IAAI,CAAC,WAAW,CAAC,UAAU,CAAC,IAAI,CAAC,UAAU,CAAC,EAAE,CAAC,CAAC,SAAS,CAAC,UAAC,IAAQ;YAC/D,EAAE,EAAC,CAAC,IAAI,CAAC,OAAO,CAAC,EAAC;gBAChB,KAAI,CAAC,YAAY,GAAG,oBAAoB,CAAC;gBACzC,KAAI,CAAC,OAAO,GAAG,IAAI,CAAC,OAAO;YAC7B,CAAC;YAAA,IAAI,EAAC;gBACJ,KAAI,CAAC,YAAY,GAAG,qBAAqB,CAAC;gBAC1C,KAAI,CAAC,OAAO,GAAG,IAAI,CAAC,OAAO;gBAC3B,UAAU,CAAC;oBACP,KAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,OAAO,CAAC,CAAC,CAAC;gBACpC,CAAC,EAAE,IAAI,CAAC,CAAC;YACX,CAAC;QACL,CAAC,CAAC;IACJ,CAAC;IACD,sCAAQ,GAAR;QAAA,iBAiBC;QAhBC,IAAI,CAAC,UAAU,GAAE,IAAI,CAAC,cAAc,CAAC,QAAQ,CAAC,MAAM,CAAC;QACnD,IAAI,CAAC,WAAW,CAAC,aAAa,CAAC,IAAI,CAAC,UAAU,CAAC,EAAE,CAAC,CAAC,SAAS,CAAC,UAAC,IAAS;YACrE,EAAE,EAAC,CAAC,IAAI,CAAC,OAAO,CAAC,EAAC;gBAChB,KAAI,CAAC,YAAY,GAAG,oBAAoB,CAAC;gBACzC,KAAI,CAAC,OAAO,GAAG,IAAI,CAAC,OAAO,CAAC;gBAC5B,KAAI,CAAC,UAAU,GAAE,KAAK,CAAC;YACzB,CAAC;YAAA,IAAI,EAAC;gBACJ,KAAI,CAAC,IAAI,GAAC;oBACR,KAAK,EAAE,IAAI,CAAC,IAAI,CAAC,KAAK;oBACtB,IAAI,EAAE,IAAI,CAAC,IAAI,CAAC,IAAI;oBACpB,SAAS,EAAE,IAAI,CAAC,IAAI,CAAC,SAAS;oBAC9B,SAAS,EAAE,IAAI,CAAC,IAAI,CAAC,SAAS;iBAC/B;gBACD,KAAI,CAAC,SAAS,GAAG,IAAI,CAAC;YACxB,CAAC;QACH,CAAC,CAAC;IACN,CAAC;IA/CU,mBAAmB;QAL/B,+DAAS,CAAC;YACT,QAAQ,EAAE,iBAAiB;;;SAG5B,CAAC;yCAWuB,kEAAW;YACR,8DAAc;YACtB,sDAAM;OAZb,mBAAmB,CAiD/B;IAAD,0BAAC;CAAA;AAjD+B;;;;;;;;;;;;ACRhC,mB;;;;;;;;;;;ACAA,iKAAiK,SAAS,u9B;;;;;;;;;;;;;;;;;;;;;;;;;;;ACAxH;AACP;AACc;AACI;AAO7D;IAWE,2BACU,QAAkB,EAClB,WAAwB,EACxB,cAA8B,EAC9B,MAAc;QAHd,aAAQ,GAAR,QAAQ,CAAU;QAClB,gBAAW,GAAX,WAAW,CAAa;QACxB,mBAAc,GAAd,cAAc,CAAgB;QAC9B,WAAM,GAAN,MAAM,CAAQ;QARxB,eAAU,GAAI,KAAK,CAAC;QACpB,YAAO,GAAI,IAAI,CAAC;IAQZ,CAAC;IAGL,4CAAgB,GAAhB;QAAA,iBAgBC;QAfC,IAAI,CAAC,UAAU,GAAG,IAAI,CAAC;QACvB,uBAAuB;QACvB,IAAI,CAAC,WAAW,CAAC,QAAQ,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,SAAS,CAAC,UAAC,IAAS;YACvD,EAAE,EAAC,CAAC,IAAI,CAAC,OAAO,CAAC,EAAC;gBAChB,KAAI,CAAC,YAAY,GAAG,oBAAoB,CAAC;gBACzC,KAAI,CAAC,OAAO,GAAG,IAAI,CAAC,OAAO,CAAC;gBAC5B,KAAI,CAAC,UAAU,GAAG,KAAK,CAAC;YAC1B,CAAC;YAAA,IAAI,EAAC;gBACJ,KAAI,CAAC,YAAY,GAAG,qBAAqB,CAAC;gBAC1C,KAAI,CAAC,OAAO,GAAG,IAAI,CAAC,OAAO,CAAC;gBAC5B,UAAU,CAAC;oBACT,KAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,OAAO,CAAC,CAAC,CAAC;gBAClC,CAAC,EAAE,IAAI,CAAC,CAAC;YACX,CAAC;QACH,CAAC,CAAC,CAAC;IACL,CAAC;IACD,kCAAM,GAAN;QACE,IAAI,CAAC,QAAQ,CAAC,IAAI,EAAE,CAAC;IACvB,CAAC;IACD,oCAAQ,GAAR;QAAA,iBAeC;QAdC,IAAI,CAAC,UAAU,GAAG,IAAI,CAAC,cAAc,CAAC,QAAQ,CAAC,MAAM,CAAC;QACtD,6BAA6B;QAC7B,IAAI,CAAC,WAAW,CAAC,aAAa,CAAC,IAAI,CAAC,UAAU,CAAC,EAAE,CAAC,CAAC,SAAS,CAAC,UAAC,IAAS;YACrE,OAAO,CAAC,GAAG,CAAC,kBAAkB,GAAE,IAAI,CAAC,CAAC;YACtC,EAAE,EAAC,CAAC,IAAI,CAAC,OAAO,CAAC,EAAC;gBAChB,KAAI,CAAC,YAAY,GAAG,oBAAoB,CAAC;gBACzC,KAAI,CAAC,OAAO,GAAG,gBAAgB,CAAC;YAClC,CAAC;YAAA,IAAI,EAAC;gBACJ,KAAK,CAAC,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;gBACzB,KAAI,CAAC,IAAI,GAAG,IAAI,CAAC,IAAI,CAAC;gBACpB,KAAI,CAAC,OAAO,GAAG,KAAK,CAAC;YACvB,CAAC;QAEH,CAAC,CAAC,CAAC;IACL,CAAC;IAtDU,iBAAiB;QAL7B,+DAAS,CAAC;YACT,QAAQ,EAAE,eAAe;;;SAG1B,CAAC;yCAaoB,wDAAQ;YACL,kEAAW;YACR,8DAAc;YACtB,sDAAM;OAfb,iBAAiB,CAwD7B;IAAD,wBAAC;CAAA;AAxD6B;;;;;;;;;;;;ACV9B,mB;;;;;;;;;;;ACAA,mE;;;;;;;;;;;;;;;;;;;;;;;;ACAkD;AAOlD;IAEE;IAAgB,CAAC;IAEjB,qCAAQ,GAAR;IACA,CAAC;IALU,kBAAkB;QAL9B,+DAAS,CAAC;YACT,QAAQ,EAAE,eAAe;;;SAG1B,CAAC;;OACW,kBAAkB,CAO9B;IAAD,yBAAC;CAAA;AAP8B;;;;;;;;;;;;ACP/B,mB;;;;;;;;;;;ACAA,qrH;;;;;;;;;;;;;;;;;;;;;;;;;ACAkD;AACO;AAOzD;IAEE,uBACS,WAAwB;QAAxB,gBAAW,GAAX,WAAW,CAAa;IAC7B,CAAC;IAEL,gCAAQ,GAAR;IACA,CAAC;IAPU,aAAa;QALzB,+DAAS,CAAC;YACT,QAAQ,EAAE,UAAU;;;SAGrB,CAAC;yCAIsB,kEAAW;OAHtB,aAAa,CASzB;IAAD,oBAAC;CAAA;AATyB;;;;;;;;;;;;ACR1B,mB;;;;;;;;;;;ACAA,0IAA0I,SAAS,kLAAkL,wJAAwJ,4YAA4Y,wJAAwJ,kb;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACA/8B;AAC+B;AACvB;AACjB;AACW;AAOpD;IASE,wBACU,WAAwB,EACxB,WAAwB,EACxB,MAAc,EACd,SAAoB;QAHpB,gBAAW,GAAX,WAAW,CAAa;QACxB,gBAAW,GAAX,WAAW,CAAa;QACxB,WAAM,GAAN,MAAM,CAAQ;QACd,cAAS,GAAT,SAAS,CAAW;QAR9B,eAAU,GAAG,KAAK,CAAC;QAUjB,IAAI,CAAC,UAAU,EAAE,CAAC;IACpB,CAAC;IAGD,mCAAU,GAAV;QACE,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC,WAAW,CAAC,KAAK,CAAC;YACjC,QAAQ,EAAE,CAAC,EAAE,EAAE,yDAAU,CAAC,QAAQ,CAAC;YACnC,QAAQ,EAAE,CAAC,EAAE,EAAE,yDAAU,CAAC,QAAQ,CAAC;SACpC,CAAC,CAAC;IAEL,CAAC;IAED,oCAAW,GAAX;QACE,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC,UAAU,CAAC,CAAC,OAAO,EAAE,CAAC;QACzC,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC,UAAU,CAAC,CAAC,OAAO,EAAE,CAAC;IAC3C,CAAC;IAED,mCAAU,GAAV;QACE,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC,UAAU,CAAC,CAAC,MAAM,EAAE,CAAC;QACxC,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC,UAAU,CAAC,CAAC,MAAM,EAAE,CAAC;IAC1C,CAAC;IAED,sCAAa,GAAb;QAAA,iBA8BC;QA7BC,IAAI,CAAC,UAAU,GAAG,IAAI,CAAC;QACvB,IAAI,CAAC,WAAW,EAAE,CAAC;QACnB,IAAM,IAAI,GAAG;YACX,QAAQ,EAAE,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,UAAU,CAAC,CAAC,KAAK;YACzC,QAAQ,EAAE,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,UAAU,CAAC,CAAC,KAAK;SAC1C;QAED,IAAI,CAAC,WAAW,CAAC,KAAK,CAAC,IAAI,CAAC,CAAC,SAAS,CAAC,UAAC,IAAS;YAC/C,6CAA6C;YAC7C,EAAE,CAAC,CAAC,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC,CAAC;gBAClB,KAAI,CAAC,YAAY,GAAG,oBAAoB,CAAC,CAAC,+BAA+B;gBACzE,KAAI,CAAC,OAAO,GAAG,IAAI,CAAC,OAAO,CAAC,CAAC,sBAAsB;gBACnD,KAAI,CAAC,UAAU,GAAG,KAAK,CAAC,CAAC,yBAAyB;gBAClD,KAAI,CAAC,UAAU,EAAE,CAAC,CAAE,4BAA4B;YAClD,CAAC;YAAC,IAAI,CAAC,CAAC;gBACN,KAAI,CAAC,YAAY,GAAG,qBAAqB,CAAC,CAAE,gCAAgC;gBAC5E,KAAI,CAAC,OAAO,GAAG,IAAI,CAAC,OAAO,CAAC,CAAC,uBAAuB;gBACpD,0DAA0D;gBAC1D,KAAI,CAAC,WAAW,CAAC,aAAa,CAAC,IAAI,CAAC,KAAK,EAAE,IAAI,CAAC,IAAI,CAAC,CAAC;gBACtD,gDAAgD;gBAChD,UAAU,CAAC;oBACT,EAAE,CAAC,CAAC,KAAI,CAAC,WAAW,CAAC,CAAC,CAAC;wBACrB,KAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,KAAI,CAAC,WAAW,CAAC,CAAC,CAAC;oBAC3C,CAAC;oBAAC,IAAI,CAAC,CAAC;wBACN,KAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,YAAY,CAAC,CAAC,CAAC,CAAC,+BAA+B;oBACvE,CAAC;gBACH,CAAC,EAAE,IAAI,CAAC;YACV,CAAC;QACH,CAAC,CAAC,CAAC;IACL,CAAC;IACD,iCAAQ,GAAR;QAEE,EAAE,CAAC,CAAC,IAAI,CAAC,SAAS,CAAC,WAAW,CAAC,CAAC,CAAC;YAC/B,IAAI,CAAC,YAAY,GAAG,oBAAoB,CAAC;YACzC,IAAI,CAAC,OAAO,GAAG,yCAAyC,CAAC;YACzD,IAAI,CAAC,WAAW,GAAG,IAAI,CAAC,SAAS,CAAC,WAAW,CAAC;YAC9C,IAAI,CAAC,SAAS,CAAC,WAAW,GAAG,SAAS,CAAC;QACzC,CAAC;IACH,CAAC;IA5EU,cAAc;QAL1B,+DAAS,CAAC;YACT,QAAQ,EAAE,WAAW;;;SAGtB,CAAC;yCAWuB,0DAAW;YACX,kEAAW;YAChB,sDAAM;YACH,4DAAS;OAbnB,cAAc,CA8E1B;IAAD,qBAAC;CAAA;AA9E0B;;;;;;;;;;;;ACX3B,mB;;;;;;;;;;;ACAA,60BAA60B,WAAW,oNAAoN,WAAW,oiBAAoiB,WAAW,wH;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACApjD;AACO;AAChB;AACkB;AAM3D;IAEE,yBACS,UAAuB,EACtB,MAAc,EACd,qBAA4C;QAF7C,eAAU,GAAV,UAAU,CAAa;QACtB,WAAM,GAAN,MAAM,CAAQ;QACd,0BAAqB,GAArB,qBAAqB,CAAuB;IAClD,CAAC;IAEL,kCAAQ,GAAR;IACA,CAAC;IAED,uCAAa,GAAb;QACE,IAAI,CAAC,UAAU,CAAC,MAAM,EAAE,CAAC;QACzB,IAAI,CAAC,qBAAqB,CAAC,gBAAgB,CAAC,EAAC,QAAQ,EAAC,CAAC,qBAAqB,CAAC,EAAC,IAAI,EAAC,SAAS,EAAC,CAAC,CAAC;QAC/F,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC;IAC9B,CAAC;IAfU,eAAe;QAL3B,+DAAS,CAAC;YACT,QAAQ,EAAE,YAAY;;;SAGvB,CAAC;yCAIqB,kEAAW;YACd,sDAAM;YACS,uEAAqB;OAL3C,eAAe,CAgB3B;IAAD,sBAAC;CAAA;AAhB2B;;;;;;;;;;;;ACT5B,mB;;;;;;;;;;;ACAA,qIAAqI,YAAY,+CAA+C,OAAO,e;;;;;;;;;;;;;;;;;;;;;;;;;ACArJ;AACQ;AAM1D;IAME,0BACU,WAAwB;QAAxB,gBAAW,GAAX,WAAW,CAAa;IAC9B,CAAC;IAEL,mCAAQ,GAAR;QAAA,iBAOC;QALC,IAAI,CAAC,WAAW,CAAC,UAAU,EAAE,CAAC,SAAS,CAAC,UAAC,OAAa;YACpD,KAAI,CAAC,QAAQ,GAAG,OAAO,CAAC,IAAI,CAAC,QAAQ,CAAC;YACtC,KAAI,CAAC,KAAK,GAAI,OAAO,CAAC,IAAI,CAAC,KAAK,CAAC;YACjC,sCAAsC;QACxC,CAAC,CAAC,CAAC;IACL,CAAC;IAjBU,gBAAgB;QAL5B,+DAAS,CAAC;YACT,QAAQ,EAAE,aAAa;;;SAGxB,CAAC;yCAQuB,kEAAW;OAPvB,gBAAgB,CAmB5B;IAAD,uBAAC;CAAA;AAnB4B;;;;;;;;;;;;ACP7B,mB;;;;;;;;;;;ACAA,sKAAsK,SAAS,uIAAuI,YAAY,iEAAiE,SAAS,iB;;;;;;;;;;;;;;;;;;;;;;;;;;ACA1V;AACQ;AACF;AAMxD;IAWE,gCACU,WAAwB,EACxB,cAA8B,EAC9B,MAAc;QAFd,gBAAW,GAAX,WAAW,CAAa;QACxB,mBAAc,GAAd,cAAc,CAAgB;QAC9B,WAAM,GAAN,MAAM,CAAQ;QARxB,iBAAY,GAAI,KAAK,CAAC;IAUlB,CAAC;IAEL,yCAAQ,GAAR;QAAA,iBAgBC;QAfC,IAAI,CAAC,UAAU,GAAI,IAAI,CAAC,cAAc,CAAC,QAAQ,CAAC,MAAM,CAAC;QACrD,IAAI,CAAC,WAAW,CAAC,gBAAgB,CAAC,IAAI,CAAC,UAAU,CAAC,QAAQ,CAAC,CAAC,SAAS,CAAC,UAAC,IAAU;YAC/E,0BAA0B;YAE1B,EAAE,EAAC,CAAC,IAAI,CAAC,OAAO,CAAC,EAAC;gBAChB,KAAI,CAAC,YAAY,GAAG,oBAAoB,CAAC;gBACzC,KAAI,CAAC,OAAO,GAAG,IAAI,CAAC,OAAO,CAAC;gBAC5B,KAAI,CAAC,YAAY,GAAG,KAAK,CAAC;YAC5B,CAAC;YAAA,IAAI,EAAC;gBACJ,KAAI,CAAC,QAAQ,GAAI,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC;gBACpC,KAAI,CAAC,KAAK,GAAG,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC;gBAC7B,KAAI,CAAC,YAAY,GAAG,IAAI,CAAC;YAC3B,CAAC;QAEL,CAAC,CAAC;IACJ,CAAC;IAlCU,sBAAsB;QALlC,+DAAS,CAAC;YACT,QAAQ,EAAE,oBAAoB;;;SAG/B,CAAC;yCAauB,kEAAW;YACR,8DAAc;YACtB,sDAAM;OAdb,sBAAsB,CAoClC;IAAD,6BAAC;CAAA;AApCkC;;;;;;;;;;;;ACRnC,mB;;;;;;;;;;;ACAA,yJAAyJ,SAAS,+OAA+O,iMAAiM,+qBAA+qB,iBAAiB,kMAAkM,+KAA+K,0qBAA0qB,cAAc,wNAAwN,4HAA4H,64BAA64B,+NAA+N,4sBAA4sB,8BAA8B,0BAA0B,2BAA2B,6BAA6B,+BAA+B,mB;;;;;;;;;;;;;;;;;;;;;;;;;;;ACApiJ;AACiB;AACT;AACjB;AAMzC;IAWE,2BACU,WAAwB,EACxB,WAAwB,EACxB,MAAc;QAFd,gBAAW,GAAX,WAAW,CAAa;QACxB,gBAAW,GAAX,WAAW,CAAa;QACxB,WAAM,GAAN,MAAM,CAAQ;QAT1B,eAAU,GAAG,KAAK,CAAC;QAWf,IAAI,CAAC,UAAU,EAAE,CAAC;IACpB,CAAC;IAID,sCAAU,GAAV;QACE,IAAI,CAAC,IAAI,GAAI,IAAI,CAAC,WAAW,CAAC,KAAK,CAAC;YAClC,KAAK,EAAE,CAAC,EAAE,EAAC,yDAAU,CAAC,OAAO,CAAC;oBAC5B,yDAAU,CAAC,QAAQ;oBACnB,yDAAU,CAAC,SAAS,CAAC,CAAC,CAAC;oBACvB,yDAAU,CAAC,SAAS,CAAC,EAAE,CAAC;oBACxB,IAAI,CAAC,aAAa;iBACnB,CAAC,CAAC;YACH,QAAQ,EAAE,CAAC,EAAE,EAAC,yDAAU,CAAC,OAAO,CAAC;oBAC/B,yDAAU,CAAC,QAAQ;oBACnB,yDAAU,CAAC,SAAS,CAAC,CAAC,CAAC;oBACvB,yDAAU,CAAC,SAAS,CAAC,EAAE,CAAC;oBACxB,IAAI,CAAC,gBAAgB;iBACtB,CAAC,CAAC;YACH,QAAQ,EAAE,CAAC,EAAE,EAAC,yDAAU,CAAC,OAAO,CAAC;oBAC/B,yDAAU,CAAC,QAAQ;oBACnB,yDAAU,CAAC,SAAS,CAAC,CAAC,CAAC;oBACvB,yDAAU,CAAC,SAAS,CAAC,EAAE,CAAC;oBACxB,IAAI,CAAC,gBAAgB;iBACtB,CAAC,CAAC;YACH,OAAO,EAAE,CAAC,EAAE,EAAC,yDAAU,CAAC,QAAQ,CAAC;SAClC,EAAE,EAAC,SAAS,EAAE,IAAI,CAAC,iBAAiB,CAAC,UAAU,EAAE,SAAS,CAAC,EAAC,CAAC,CAAC;IACjE,CAAC;IAED,uCAAW,GAAX;QACE,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC,OAAO,CAAC,CAAC,OAAO,EAAE,CAAC;QACtC,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC,UAAU,CAAC,CAAC,OAAO,EAAE,CAAC;QACzC,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC,UAAU,CAAC,CAAC,OAAO,EAAE,CAAC;QACzC,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC,SAAS,CAAC,CAAC,OAAO,EAAE,CAAC;IAE1C,CAAC;IAED,sCAAU,GAAV;QACE,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC,OAAO,CAAC,CAAC,MAAM,EAAE,CAAC;QACrC,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC,UAAU,CAAC,CAAC,MAAM,EAAE,CAAC;QACxC,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC,UAAU,CAAC,CAAC,MAAM,EAAE,CAAC;QACxC,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC,SAAS,CAAC,CAAC,MAAM,EAAE,CAAC;IACzC,CAAC;IAGD,yCAAa,GAAb,UAAc,QAAQ;QACpB,IAAM,MAAM,GAAG,IAAI,MAAM,CAAC,wJAAwJ,CAAC,CAAC;QACpL,EAAE,EAAC,MAAM,CAAC,IAAI,CAAC,QAAQ,CAAC,KAAK,CAAC,CAAC,EAAC;YAC9B,MAAM,CAAC,IAAI,CAAC;QACd,CAAC;QAAA,IAAI,EAAC;YACJ,MAAM,CAAC,EAAE,eAAe,EAAE,IAAI,EAAC;QACjC,CAAC;IACH,CAAC;IAED,4CAAgB,GAAhB,UAAiB,QAAQ;QACvB,IAAM,MAAM,GAAG,IAAI,MAAM,CAAC,gBAAgB,CAAC,CAAC;QAC5C,EAAE,EAAC,MAAM,CAAC,IAAI,CAAC,QAAQ,CAAC,KAAK,CAAC,CAAC,EAAC;YAC9B,MAAM,CAAC,IAAI,CAAC;QACd,CAAC;QAAA,IAAI,EAAC;YACJ,MAAM,CAAC,EAAE,kBAAkB,EAAE,IAAI,EAAC;QACpC,CAAC;IACH,CAAC;IAED,4CAAgB,GAAhB,UAAiB,QAAQ;QACvB,IAAM,MAAM,GAAG,IAAI,MAAM,CAAC,yDAAyD,CAAC,CAAC;QACrF,EAAE,EAAC,MAAM,CAAC,IAAI,CAAC,QAAQ,CAAC,KAAK,CAAC,CAAC,EAAC;YAC9B,MAAM,CAAC,IAAI,CAAC;QACd,CAAC;QAAA,IAAI,EAAC;YACJ,MAAM,CAAC,EAAE,kBAAkB,EAAE,IAAI,EAAC;QACpC,CAAC;IACH,CAAC;IAED,6CAAiB,GAAjB,UAAkB,QAAQ,EAAE,OAAO;QACjC,MAAM,CAAC,UAAC,KAAgB;YACtB,EAAE,EAAC,KAAK,CAAC,QAAQ,CAAC,QAAQ,CAAC,CAAC,KAAK,KAAK,KAAK,CAAC,QAAQ,CAAC,OAAO,CAAC,CAAC,KAAK,CAAC,EAAC;gBACnE,MAAM,CAAC,IAAI,CAAC;YACd,CAAC;YAAA,IAAI,EAAC;gBACJ,MAAM,CAAC,EAAE,mBAAmB,EAAE,IAAI,EAAE;YACtC,CAAC;QACH,CAAC;IACH,CAAC;IAGD,0BAA0B;IAC1B,4CAAgB,GAAhB;QAAA,iBA4BC;QA3BC,IAAI,CAAC,UAAU,GAAG,IAAI,CAAC;QACvB,IAAI,CAAC,WAAW,EAAE,CAAC;QACnB,IAAM,IAAI,GAAE;YACV,KAAK,EAAE,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,OAAO,CAAC,CAAC,KAAK;YACnC,QAAQ,EAAE,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,UAAU,CAAC,CAAC,KAAK;YACzC,QAAQ,EAAE,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,UAAU,CAAC,CAAC,KAAK;SAC1C;QAED,IAAI,CAAC,WAAW,CAAC,YAAY,CAAC,IAAI,CAAC,CAAC,SAAS,CAAC,UAAC,GAAQ;YACrD,OAAO,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC;YACjB,EAAE,EAAC,CAAC,GAAG,CAAC,OAAO,CAAC,EAAC;gBAChB,KAAI,CAAC,YAAY,GAAG,oBAAoB,CAAC;gBACzC,KAAI,CAAC,OAAO,GAAG,GAAG,CAAC,OAAO,CAAC;gBAC3B,KAAI,CAAC,UAAU,GAAG,KAAK,CAAC;gBACxB,KAAI,CAAC,UAAU,EAAE,CAAC;YACnB,CAAC;YAAA,IAAI,EAAC;gBACJ,KAAI,CAAC,YAAY,GAAG,qBAAqB,CAAC;gBAC3C,KAAI,CAAC,OAAO,GAAG,GAAG,CAAC,OAAO,CAAC;gBAC3B,UAAU,CAAC;oBACT,KAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,QAAQ,CAAC,CAAC,CAAC;gBACnC,CAAC,EAAC,IAAI,CAAC;YACR,CAAC;QACH,CAAC,CAAC;QAEF,6CAA6C;QAC7C,gDAAgD;IAElD,CAAC;IAED,sCAAU,GAAV;QAAA,iBAUC;QATC,IAAI,CAAC,WAAW,CAAC,UAAU,CAAC,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,OAAO,CAAC,CAAC,KAAK,CAAC,CAAC,SAAS,CAAC,UAAC,IAAS;YAC5E,EAAE,EAAC,CAAC,IAAI,CAAC,OAAO,CAAC,EAAC;gBAChB,KAAI,CAAC,UAAU,GAAG,KAAK,CAAC;gBACxB,KAAI,CAAC,YAAY,GAAG,IAAI,CAAC,OAAO,CAAC;YACnC,CAAC;YAAA,IAAI,EAAC;gBACJ,KAAI,CAAC,UAAU,GAAI,IAAI,CAAC;gBACxB,KAAI,CAAC,YAAY,GAAG,IAAI,CAAC,OAAO,CAAC;YACnC,CAAC;QACH,CAAC,CAAC;IACJ,CAAC;IAED,yCAAa,GAAb;QAAA,iBAUC;QATC,IAAI,CAAC,WAAW,CAAC,aAAa,CAAC,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,UAAU,CAAC,CAAC,KAAK,CAAC,CAAC,SAAS,CAAC,UAAC,IAAS;YAClF,EAAE,EAAC,CAAC,IAAI,CAAC,OAAO,CAAC,EAAC;gBAChB,KAAI,CAAC,aAAa,GAAG,KAAK,CAAC;gBAC3B,KAAI,CAAC,eAAe,GAAG,IAAI,CAAC,OAAO,CAAC;YACtC,CAAC;YAAA,IAAI,EAAC;gBACJ,KAAI,CAAC,aAAa,GAAI,IAAI,CAAC;gBAC3B,KAAI,CAAC,eAAe,GAAG,IAAI,CAAC,OAAO,CAAC;YACtC,CAAC;QACH,CAAC,CAAC;IACJ,CAAC;IAED,oCAAQ,GAAR;IACA,CAAC;IA3JU,iBAAiB;QAL7B,+DAAS,CAAC;YACT,QAAQ,EAAE,cAAc;;;SAGzB,CAAC;yCAauB,0DAAW;YACX,kEAAW;YAChB,sDAAM;OAdb,iBAAiB,CA6J7B;IAAD,wBAAC;CAAA;AA7J6B;;;;;;;;;;;;;;;;;;;;;;;;;;;ACTiB;AAEQ;AACd;AAGzC;IAII,mBACY,WAAwB,EACxB,MAAc;QADd,gBAAW,GAAX,WAAW,CAAa;QACxB,WAAM,GAAN,MAAM,CAAQ;IACxB,CAAC;IAEL,+BAAW,GAAX,UACI,MAA8B,EAC9B,KAA0B;QAE5B,+CAA+C;QAC/C,eAAe;QAEf,EAAE,EAAC,IAAI,CAAC,WAAW,CAAC,UAAU,EAAE,CAAC,EAAC;YAC9B,MAAM,CAAC,IAAI,CAAC;QAChB,CAAC;QAAA,IAAI,EAAC;YACF,IAAI,CAAC,WAAW,GAAG,KAAK,CAAC,GAAG,CAAC;YAC7B,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,QAAQ,CAAC,CAAC,CAAC;YACjC,MAAM,CAAC,KAAK,CAAC;QACjB,CAAC;IACH,CAAC;IAvBU,SAAS;QADrB,gEAAU,EAAE;yCAMgB,kEAAW;YAChB,sDAAM;OANjB,SAAS,CAwBrB;IAAD,gBAAC;CAAA;AAxBqB;;;;;;;;;;;;;;;;;;;;;;;;;;;ACNyB;AAEQ;AACd;AAGzC;IAEI,sBACY,WAAwB,EACxB,MAAc;QADd,gBAAW,GAAX,WAAW,CAAa;QACxB,WAAM,GAAN,MAAM,CAAQ;IACxB,CAAC;IAEL,kCAAW,GAAX;QACE,+CAA+C;QAC/C,eAAe;QAEf,EAAE,EAAC,IAAI,CAAC,WAAW,CAAC,UAAU,EAAE,CAAC,EAAC;YAC9B,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC;YAC5B,MAAM,CAAC,KAAK,CAAC;QACjB,CAAC;QAAA,IAAI,EAAC;YACF,MAAM,CAAC,IAAI,CAAC;QAChB,CAAC;IACH,CAAC;IAjBU,YAAY;QADxB,gEAAU,EAAE;yCAIgB,kEAAW;YAChB,sDAAM;OAJjB,YAAY,CAkBxB;IAAD,mBAAC;CAAA;AAlBwB;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACNkB;AACwC;AAC9C;AACiB;AAMtD;IAOE,qBACU,IAAgB,EAChB,SAA2B;QAD3B,SAAI,GAAJ,IAAI,CAAY;QAChB,cAAS,GAAT,SAAS,CAAkB;QAPrC,WAAM,GAAG,wBAAwB,CAAC;IAQ9B,CAAC;IAEL,iDAA2B,GAA3B;QACE,IAAI,CAAC,SAAS,EAAE,CAAC;QACjB,IAAI,CAAC,OAAO,GAAG,IAAI,uEAAkB,CAAC;YACpC,OAAO,EAAE,IAAI,gEAAW,CAAC;gBACvB,cAAc,EAAE,kBAAkB;gBAClC,eAAe,EAAE,IAAI,CAAC,SAAS;aAChC,CAAC;SACH,CAAC;IAEJ,CAAC;IAED,+BAAS,GAAT;QACE,IAAM,KAAK,GAAG,YAAY,CAAC,OAAO,CAAC,OAAO,CAAC,CAAC;QAC5C,IAAI,CAAC,SAAS,GAAG,KAAK,CAAC;IAEzB,CAAC;IAED,kCAAY,GAAZ,UAAa,IAAI;QACf,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,MAAM,GAAG,yBAAyB,EAAE,IAAI,CAAC;aACjE,IAAI,CAAC,0DAAG,CAAC,aAAG;YACX,MAAM,CAAC,GAAG,CAAC;QACb,CAAC,CAAC,CAAC;IACP,CAAC;IAED,mCAAa,GAAb,UAAc,QAAQ;QACpB,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,MAAM,GAAG,+BAA+B,GAAG,QAAQ,CAAC;aAC3E,IAAI,CAAC,0DAAG,CAAC,aAAG;YACX,MAAM,CAAC,GAAG,CAAC;QACb,CAAC,CAAC,CAAC;IACP,CAAC;IAED,gCAAU,GAAV,UAAW,KAAK;QACd,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,MAAM,GAAG,4BAA4B,GAAG,KAAK,CAAC;aACrE,IAAI,CAAC,0DAAG,CAAC,aAAG;YACX,MAAM,CAAC,GAAG,CAAC;QACb,CAAC,CAAC,CAAC;IACP,CAAC;IAED,2BAAK,GAAL,UAAM,IAAI;QACR,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,MAAM,GAAG,sBAAsB,EAAE,IAAI,CAAC,CAAC,IAAI,CAAC,0DAAG,CAAC,aAAG;YAC5E,MAAM,CAAC,GAAG,CAAC;QACb,CAAC,CAAC,CAAC,CAAC;IACN,CAAC;IAED,4BAAM,GAAN;QACE,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC;QACtB,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC;QACjB,YAAY,CAAC,KAAK,EAAE,CAAC;IACvB,CAAC;IACD,mCAAa,GAAb,UAAc,KAAK,EAAE,IAAI;QACvB,YAAY,CAAC,OAAO,CAAC,OAAO,EAAE,KAAK,CAAC,CAAC;QACrC,YAAY,CAAC,OAAO,CAAC,MAAM,EAAE,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,CAAC;QAClD,IAAI,CAAC,SAAS,GAAG,KAAK,CAAC;QACvB,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC;IACnB,CAAC;IAED,gCAAU,GAAV;QACE,IAAI,CAAC,2BAA2B,EAAE,CAAC;QACnC,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,MAAM,GAAG,wBAAwB,EAAE,IAAI,CAAC,OAAO,CAAC;aACvE,IAAI,CAAC,0DAAG,CAAC,aAAG;YACX,MAAM,CAAC,GAAG,CAAC;QACb,CAAC,CAAC,CAAC,CAAC;IACR,CAAC;IACD,gCAAU,GAAV;QACE,0CAA0C;QAC1C,IAAM,KAAK,GAAG,YAAY,CAAC,OAAO,CAAC,OAAO,CAAC,CAAC;QAC5C,MAAM,CAAC,CAAC,IAAI,CAAC,SAAS,CAAC,cAAc,CAAC,KAAK,CAAC,CAAC;IAC/C,CAAC;IAED,sCAAgB,GAAhB,UAAiB,QAAQ;QACvB,IAAI,CAAC,2BAA2B,EAAE,CAAC;QACnC,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,MAAM,GAAG,+BAA+B,GAAG,QAAQ,EAAE,IAAI,CAAC,OAAO,CAAC;aAC3F,IAAI,CAAC,0DAAG,CAAC,aAAG;YACX,MAAM,CAAC,GAAG,CAAC;QACb,CAAC,CAAC,CAAC;IACL,CAAC;IAvFU,WAAW;QAHvB,gEAAU,CAAC;YACV,UAAU,EAAE,MAAM;SACnB,CAAC;yCASgB,+DAAU;YACL,mEAAgB;OAT1B,WAAW,CAwFvB;IAAD,kBAAC;CAAA;AAxFuB;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACTmB;AACwC;AACtC;AACR;AAMrC;IAME,qBACU,WAAwB,EACxB,IAAgB;QADhB,gBAAW,GAAX,WAAW,CAAa;QACxB,SAAI,GAAJ,IAAI,CAAY;QAJ1B,WAAM,GAAG,IAAI,CAAC,WAAW,CAAC,MAAM,CAAC;IAK7B,CAAC;IAIL,iDAA2B,GAA3B;QACE,IAAI,CAAC,WAAW,CAAC,SAAS,EAAE,CAAC;QAC7B,IAAI,CAAC,OAAO,GAAG,IAAI,uEAAkB,CAAC;YACpC,OAAO,EAAE,IAAI,gEAAW,CAAC;gBACvB,cAAc,EAAE,kBAAkB;gBAClC,eAAe,EAAE,IAAI,CAAC,WAAW,CAAC,SAAS;aAC5C,CAAC;SACH,CAAC;IAEJ,CAAC;IAED,6BAAO,GAAP,UAAQ,IAAI;QACV,IAAI,CAAC,2BAA2B,EAAE,CAAC;QACnC,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,MAAM,GAAG,eAAe,EAAE,IAAI,EAAE,IAAI,CAAC,OAAO,CAAC;aACvE,IAAI,CAAC,0DAAG,CAAC,aAAG;YACX,MAAM,CAAC,GAAG,CAAC;QACb,CAAC,CAAC,CAAC;IACL,CAAC;IAED,iCAAW,GAAX;QACE,IAAI,CAAC,2BAA2B,EAAE,CAAC;QACnC,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,MAAM,GAAG,gBAAgB,EAAE,IAAI,CAAC,OAAO,CAAC;aACjE,IAAI,CAAC,0DAAG,CAAC,aAAG;YACX,MAAM,CAAC,GAAG,CAAC;QACb,CAAC,CAAC,CAAC;IACL,CAAC;IAED,mCAAa,GAAb,UAAc,EAAE;QACd,IAAI,CAAC,2BAA2B,EAAE,CAAC;QACnC,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,MAAM,GAAG,mBAAmB,GAAG,EAAE,EAAE,IAAI,CAAC,OAAO,CAAC;aACzE,IAAI,CAAC,0DAAG,CAAC,aAAG;YACX,MAAM,CAAC,GAAG,CAAC;QACb,CAAC,CAAC,CAAC;IACL,CAAC;IAED,8BAAQ,GAAR,UAAS,IAAI;QACX,IAAI,CAAC,2BAA2B,EAAE,CAAC;QACnC,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,MAAM,GAAG,mBAAmB,EAAE,IAAI,EAAE,IAAI,CAAC,OAAO,CAAC;aAC1E,IAAI,CAAC,0DAAG,CAAC,aAAG;YACX,MAAM,CAAC,GAAG,CAAC;QACb,CAAC,CAAC,CAAC;IACL,CAAC;IAED,gCAAU,GAAV,UAAW,EAAE;QACX,IAAI,CAAC,2BAA2B,EAAE,CAAC;QACnC,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,MAAM,GAAG,mBAAmB,GAAG,EAAE,EAAE,IAAI,CAAC,OAAO,CAAC;aAC5E,IAAI,CAAC,0DAAG,CAAC,aAAG;YACX,MAAM,CAAC,GAAG,CAAC;QACb,CAAC,CAAC,CAAC,CAAC;IACN,CAAC;IAGD,8BAAQ,GAAR,UAAS,EAAE;QACT,IAAM,QAAQ,GAAI,EAAE,EAAE,EAAE,EAAE,EAAC,CAAC;QAC5B,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,MAAM,GAAG,iBAAiB,EAAE,QAAQ,EAAE,IAAI,CAAC,OAAO,CAAC;aAC5E,IAAI,CAAC,0DAAG,CAAC,aAAG;YACX,OAAO,CAAC,GAAG,CAAC,aAAa,GAAE,GAAG,CAAC,CAAC;YAChC,MAAM,CAAC,GAAG,CAAC;QACb,CAAC,CAAC,CAAC;IACL,CAAC;IACD,iCAAW,GAAX,UAAY,EAAE;QACZ,IAAM,QAAQ,GAAI,EAAC,EAAE,EAAE,EAAE,EAAC,CAAC;QAC3B,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,MAAM,GAAG,oBAAoB,EAAE,QAAQ,EAAE,IAAI,CAAC,OAAO,CAAC;aAC/E,IAAI,CAAC,0DAAG,CAAC,aAAG;YACX,MAAM,CAAC,GAAG,CAAC;QACb,CAAC,CAAC,CAAC;IACL,CAAC;IAED,iCAAW,GAAX,UAAY,EAAE,EAAE,OAAO;QACrB,IAAI,CAAC,2BAA2B,EAAE,CAAC;QACnC,IAAM,QAAQ,GAAG;YACf,EAAE,EAAE,EAAE;YACN,OAAO,EAAE,OAAO;SACjB;QAED,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,MAAM,GAAG,eAAe,EAAE,QAAQ,EAAE,IAAI,CAAC,OAAO,CAAC;aAC3E,IAAI,CAAC,0DAAG,CAAC,aAAG;YACX,sCAAsC;YACpC,MAAM,CAAC,GAAG,CAAC;QACf,CAAC,CAAC,CAAC,CAAC;IACN,CAAC;IA7FU,WAAW;QAHvB,gEAAU,CAAC;YACV,UAAU,EAAE,MAAM;SACnB,CAAC;yCAQuB,yDAAW;YAClB,+DAAU;OARf,WAAW,CA8FvB;IAAD,kBAAC;CAAA;AA9FuB;;;;;;;;;;;;;;ACTxB;AAAA,gFAAgF;AAChF,2EAA2E;AAC3E,gEAAgE;AAEzD,IAAM,WAAW,GAAG;IACzB,UAAU,EAAE,KAAK;CAClB,CAAC;AAEF;;;;;GAKG;AACH,mEAAmE;;;;;;;;;;;;;;;;;;ACdpB;AAC4B;AAE9B;AACY;AAEzD,EAAE,CAAC,CAAC,qEAAW,CAAC,UAAU,CAAC,CAAC,CAAC;IAC3B,oEAAc,EAAE,CAAC;AACnB,CAAC;AAED,gGAAsB,EAAE,CAAC,eAAe,CAAC,yDAAS,CAAC;KAChD,KAAK,CAAC,aAAG,IAAI,cAAO,CAAC,GAAG,CAAC,GAAG,CAAC,EAAhB,CAAgB,CAAC,CAAC","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";","import { RouterModule, Routes } from '@angular/router';\r\nimport { NgModule } from '@angular/core';\r\nimport { HomeComponent } from './components/home/home.component';\r\nimport { DashboardComponent} from './components/dashboard/dashboard.component';\r\nimport { RegisterComponent } from './components/register/register.component';\r\nimport { LoginComponent} from './components/login/login.component';\r\nimport {  ProfileComponent } from './components/profile/profile.component';\r\nimport { PublicProfileComponent} from './components/public-profile/public-profile.component';\r\nimport { BlogComponent } from './components/blog/blog.component';\r\nimport { DeleteBlogComponent} from './components/blog/delete-blog/delete-blog.component';\r\nimport { EditBlogComponent } from './components/blog/edit-blog/edit-blog.component';\r\nimport { AuthGuard } from './guards/auth.guard';\r\nimport { NotAuthGuard} from './guards/notAuth.guard';\r\n\r\n// our array of angular 2 Routes\r\nconst appRoutes: Routes = [\r\n    {\r\n        path: '',\r\n        component: HomeComponent // Default routes\r\n    },\r\n    {\r\n        path: 'dashboard',\r\n        component: DashboardComponent, // the dashboar droutes..\r\n        canActivate: [AuthGuard]\r\n    },\r\n    {\r\n        path: 'register',\r\n        component: RegisterComponent, // The register component\r\n        canActivate: [NotAuthGuard]\r\n    },\r\n    {\r\n        path: 'login',\r\n        component: LoginComponent, // The login component\r\n        canActivate: [NotAuthGuard]\r\n\r\n    },\r\n    {\r\n        path: 'profile',\r\n        component: ProfileComponent,\r\n        canActivate: [AuthGuard]\r\n\r\n    },\r\n    {\r\n        path: 'blog',\r\n        component: BlogComponent,\r\n        canActivate: [AuthGuard]\r\n    },\r\n    {\r\n        path: 'edit-blog/:id',\r\n        component: EditBlogComponent,\r\n        canActivate: [AuthGuard]\r\n    },\r\n    {\r\n        path: 'delete-blog/:id',\r\n        component: DeleteBlogComponent,\r\n        canActivate: [AuthGuard]\r\n    },\r\n    {\r\n        path: 'user/:username',\r\n        component: PublicProfileComponent,\r\n        canActivate: [AuthGuard]\r\n    },\r\n    {\r\n        path: '**',\r\n        component: HomeComponent // The \"Catch-All\" Route\r\n    },\r\n];\r\n\r\n\r\n@NgModule({\r\n    declarations: [],\r\n    imports: [RouterModule.forRoot(appRoutes)],\r\n    providers: [],\r\n    bootstrap: [],\r\n    exports: [RouterModule]\r\n})\r\nexport class AppRoutingModule { }","module.exports = \"\"","module.exports = \"<app-navbar></app-navbar>\\r\\n\\r\\n<div class=\\\"container\\\">\\r\\n    <ng-flash-message></ng-flash-message>\\r\\n    <router-outlet></router-outlet>\\r\\n</div>\"","import { Component } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-root',\r\n  templateUrl: './app.component.html',\r\n  styleUrls: ['./app.component.css']\r\n})\r\nexport class AppComponent {\r\n  title = 'Hello world from angular 2';\r\n}\r\n","import { BrowserModule } from '@angular/platform-browser';\r\nimport { NgModule } from '@angular/core';\r\nimport { FormsModule} from '@angular/forms';\r\nimport { HttpClientModule } from '@angular/common/http';\r\nimport { ReactiveFormsModule } from '@angular/forms';\r\nimport {AppRoutingModule} from './app-routing.module';\r\nimport { AppComponent } from './app.component';\r\nimport { NavbarComponent } from './components/navbar/navbar.component';\r\nimport { HomeComponent } from './components/home/home.component';\r\nimport { DashboardComponent } from './components/dashboard/dashboard.component';\r\nimport { RegisterComponent } from './components/register/register.component';\r\nimport { AuthService} from './services/auth.service';\r\nimport { BlogService } from './services/blog.service';\r\nimport { LoginComponent } from './components/login/login.component';\r\nimport { ProfileComponent } from './components/profile/profile.component';\r\nimport {NgFlashMessagesModule } from 'ng-flash-messages';\r\nimport { JwtModule } from '@auth0/angular-jwt';\r\nimport { AuthGuard } from './guards/auth.guard';\r\nimport { NotAuthGuard } from './guards/notAuth.guard';\r\nimport { BlogComponent } from './components/blog/blog.component';\r\nimport { EditBlogComponent } from './components/blog/edit-blog/edit-blog.component';\nimport { DeleteBlogComponent } from './components/blog/delete-blog/delete-blog.component';\nimport { PublicProfileComponent } from './components/public-profile/public-profile.component';\r\n\r\n\r\n\r\n\r\nexport function tokenGetter() {\r\n  return localStorage.getItem('token');\r\n}\r\n\r\n@NgModule({\r\n  declarations: [\r\n    AppComponent,\r\n    NavbarComponent,\r\n    HomeComponent,\r\n    DashboardComponent,\r\n    RegisterComponent,\r\n    LoginComponent,\r\n    ProfileComponent,\r\n    BlogComponent,\r\n    EditBlogComponent,\r\n    DeleteBlogComponent,\r\n    PublicProfileComponent\r\n  ],\r\n  imports: [\r\n    BrowserModule,\r\n    AppRoutingModule,\r\n    FormsModule,\r\n    ReactiveFormsModule,\r\n    HttpClientModule,\r\n    NgFlashMessagesModule.forRoot(),\r\n    JwtModule.forRoot({\r\n      config:{\r\n        tokenGetter: tokenGetter,\r\n        // whitelistedDomains: ['localhost:8080'],\r\n        // blacklistedRoutes:['localhost:808']\r\n      }\r\n    })\r\n  ],\r\n  providers: [AuthService, AuthGuard, NotAuthGuard, BlogService],\r\n  bootstrap: [AppComponent]\r\n})\r\nexport class AppModule { }\r\n","module.exports = \"/* Dropdown Button */\\r\\n.dropbtn {\\r\\n    background-color: #4CAF50;\\r\\n    color: white;\\r\\n    padding: 16px;\\r\\n    font-size: 16px;\\r\\n    border: none;\\r\\n}\\r\\n/* The container <div> - needed to position the dropdown content */\\r\\n.dropdown {\\r\\n    position: relative;\\r\\n    display: inline-block;\\r\\n}\\r\\n/* Dropdown Content (Hidden by Default) */\\r\\n.dropdown-content {\\r\\n    display: none;\\r\\n    position: absolute;\\r\\n    background-color: #f1f1f1;\\r\\n    min-width: 160px;\\r\\n    box-shadow: 0px 8px 16px 0px rgba(0,0,0,0.2);\\r\\n    z-index: 1;\\r\\n}\\r\\n/* Links inside the dropdown */\\r\\n.dropdown-content a {\\r\\n    color: black;\\r\\n    padding: 12px 16px;\\r\\n    text-decoration: none;\\r\\n    display: block;\\r\\n}\\r\\n/* Change color of dropdown links on hover */\\r\\n.dropdown-content a:hover {background-color: #ddd;}\\r\\n/* Show the dropdown menu on hover */\\r\\n.dropdown:hover .dropdown-content {display: block;}\\r\\n/* Change the background color of the dropdown button when the dropdown content is shown */\\r\\n.dropdown:hover .dropbtn {background-color: #3e8e41;}\"","module.exports = \"\\n<h1 class=\\\"page-header\\\">Blog Feed</h1>\\n\\n<div class=\\\"row show-hide-message\\\" *ngIf=\\\"message && newPost\\\">\\n  <div [ngClass]=\\\"messageClass\\\">\\n    {{message}}\\n  </div>\\n</div>\\n\\n<button type=\\\"button\\\" name=\\\"button\\\" class=\\\"btn btn-warning\\\" *ngIf=\\\"!newPost\\\" (click)=\\\"newBlogForm()\\\">New Post</button>\\n\\n<button [disabled]=\\\"locadingBlogs\\\" type=\\\"button\\\" name=\\\"button\\\" class=\\\"btn btn-default\\\" *ngIf=\\\"!newPost\\\" (click)=\\\"reloadBlogs()\\\"><span class=\\\"glyphicon glyphicon-repeat\\\"></span>Reload</button>\\n\\n<br/>\\n<br/>\\n\\n\\n  <!-- NEW BLOG FORM -->\\n      <form [formGroup]=\\\"form\\\" name=\\\"blogForm\\\" (submit)=\\\"onBlogSubmit()\\\" *ngIf=\\\"newPost\\\">\\n\\n        <!-- TITLE INPUT -->\\n        <div class=\\\"form-group\\\">\\n          <label for=\\\"title\\\">Title</label>\\n          <div [ngClass]=\\\"{'has-success': form.controls.title.valid, 'has-error': form.controls.title.dirty && form.controls.title.errors }\\\">\\n            <input type=\\\"text\\\" name=\\\"title\\\"  class=\\\"form-control\\\" placeholder=\\\"*Blog Title\\\" autocomplete=\\\"off\\\" formControlName=\\\"title\\\" />\\n            <ul class=\\\"help-block\\\">\\n              <li *ngIf=\\\"form.controls.title.dirty && form.controls.title.errors?.required\\\">This field is required !</li>\\n              <li *ngIf=\\\"(form.controls.title.dirty && form.controls.title.errors?.minlength) || (form.controls.title.dirty && form.controls.title.errors?.maxlength)\\\">Max length: 50, Min length: 5</li>\\n              <li *ngIf=\\\"form.controls.title.dirty && form.controls.title.errors?.alphaNumericValidation\\\">Must be a letter or number</li>\\n            </ul>\\n          </div>\\n        </div>\\n\\n\\n         <!-- Body INPUT -->\\n         <div class=\\\"form-group\\\">\\n            <label for=\\\"body\\\">Body</label>\\n            <div [ngClass]=\\\"{'has-success': form.controls.body.valid, 'has-error': form.controls.body.dirty && form.controls.body.errors }\\\">\\n                <textarea name=\\\"body\\\" row=\\\"8\\\" cols=\\\"80\\\" placeholder=\\\"*Body\\\" class=\\\"form-control\\\" formControlName=\\\"body\\\"></textarea>\\n              <ul class=\\\"help-block\\\">\\n                <li *ngIf=\\\"form.controls.body.dirty && form.controls.body.errors?.required\\\">This field is required !</li>\\n                <li *ngIf=\\\"(form.controls.body.dirty && form.controls.body.errors?.minlength) || (form.controls.body.dirty && form.controls.body.errors?.maxlength)\\\">Max length: 500, Min length: 5</li>\\n                \\n              </ul>\\n            </div>\\n          </div>\\n\\n          <button [disabled]=\\\"processing\\\" type=\\\"button\\\" name=\\\"button\\\" (click)=\\\"goBack()\\\" class=\\\"btn btn-warning\\\">Go Back</button>\\n          <button [disabled]=\\\"processing || !form.valid\\\" type=\\\"submit\\\" name=\\\"button\\\" class=\\\"btn btn-success\\\">Submit</button>\\n\\n\\n      </form>\\n  <!-- NEW BLOG FORM -->\\n\\n\\n\\n<div *ngIf=\\\"!newPost\\\">\\n  <div class=\\\"panel panel-primary\\\" *ngFor=\\\"let blog of blogPosts\\\">\\n      <div class=\\\"panel-heading\\\">\\n        <h3 class=\\\"panel-title\\\">{{blog.title}}</h3>\\n      </div>\\n      <div class=\\\"panel-vody\\\">\\n        {{blog.body}}\\n      </div>\\n\\n      <!-- Footer Start -->\\n\\n      <div class=\\\"panel-footer\\\">\\n        <strong>Posted By:- </strong>{{blog.createdBy}}\\n        <br/>\\n        <strong>Date:-</strong>{{blog.createAt | date:'MMM dd, yyy'}}\\n        <br/>\\n        <div *ngIf=\\\"username === blog.createdBy\\\"> \\n          <strong>Likes:</strong>{{ blog.likes }}\\n        <br/>\\n          <strong>Dislikes:</strong>{{ blog.dislikes }}\\n        </div>\\n        \\n        <a [routerLink]=\\\"['/edit-blog/', blog._id]\\\" *ngIf=\\\"username === blog.createdBy\\\"><button type=\\\"button\\\" name=\\\"button\\\" class=\\\"btn btn-sm btn-info\\\">Edit</button></a>\\n        <a [routerLink]=\\\"['/delete-blog/', blog._id]\\\" *ngIf=\\\"username === blog.createdBy\\\"><button type=\\\"button\\\" name=\\\"button\\\" class=\\\"btn btn-sm btn-danger\\\">Delete</button></a>\\n\\n        <!-- Likes dropdown -->\\n          <div class=\\\"dropdown\\\">\\n            <button [disabled]=\\\"blog.likesBy.indexOf(username) > -1\\\" type=\\\"button\\\" name=\\\"button\\\" class=\\\"btn btn-sm btn-success\\\" *ngIf=\\\"username !== blog.createdBy\\\" (click)=\\\"likeBlog(blog._id)\\\">\\n              <span class=\\\"glyphicon glyphicon-thumbs-up\\\"></span>Likes: {{ blog.likes }}\\n            </button>\\n            <div class=\\\"dropdown-content\\\">\\n              <a [routerLink]=\\\"['/user/', liker]\\\" *ngFor=\\\"let liker of blog.likesBy\\\">{{ liker }}}</a>\\n            \\n\\n            </div>\\n          </div>\\n\\n\\n           <!-- disLikes dropdown -->\\n           <div class=\\\"dropdown\\\">\\n              <button [disabled]=\\\"blog.dislikesBy.indexOf(username) > -1\\\" type=\\\"button\\\" name=\\\"button\\\" class=\\\"btn btn-sm btn-warning\\\" *ngIf=\\\"username !== blog.createdBy\\\" (click)=\\\"dislikeBlog(blog._id)\\\">\\n                <span class=\\\"glyphicon glyphicon-thumbs-down\\\"></span>DisLikes: {{ blog.dislikes }}\\n              </button>\\n              <div class=\\\"dropdown-content\\\">\\n                <a [routerLink]=\\\"['/user/', disliker]\\\" *ngFor=\\\"let disliker of blog.dislikesBy\\\">{{ disliker }}</a>\\n               </div>\\n            </div>\\n        </div>\\n      \\n      <!-- Footer End -->\\n\\n\\n      <ul class=\\\"list-group\\\">\\n          <li class=\\\"list-group-item\\\">\\n            <button type=\\\"button\\\" name=\\\"button\\\" class=\\\"btn btn-sm btn-danger\\\" (click)=\\\"draftComment(blog._id)\\\" [disabled]=\\\"newComment.indexOf(blog._id) > -1\\\">Post comment</button>\\n            <br/>\\n            <br/>\\n            <div *ngIf=\\\"newComment.indexOf(blog._id) > -1\\\">\\n              <form [formGroup]=\\\"commentForm\\\">\\n                <textarea name=\\\"comment\\\" rows=\\\"10\\\" cols=\\\"30\\\" class=\\\"form-control\\\" formControlName=\\\"comment\\\"></textarea>\\n                <div [ngClass]=\\\"{'has-success': !commentForm.controls.comment.errors && commentForm.controls.comment.dirty, 'has-error': commentForm.controls.comment.dirty && commentForm.controls.comment.errors}\\\">\\n                  <ul class=\\\"help-block\\\">\\n                      <li *ngIf=\\\"commentForm.controls.comment.errors?.required && commentForm.controls.comment.dirty\\\">This field is required.</li>\\n                      <li *ngIf=\\\"(commentForm.controls.comment.errors?.maxlength && commentForm.controls.comment.dirty) || (commentForm.controls.comment.errors?.minlength && commentForm.controls.comment.dirty)\\\">Comment must be at least 1 charecter but no more than 200.</li>\\n                  </ul>\\n                </div>\\n                <button [disabled]=\\\"!commentForm.valid || processing\\\" type=\\\"submit\\\" name=\\\"button\\\" class=\\\"btn btn-sm btn-info\\\" (click)=\\\"postComment(blog._id)\\\">Submit Comment</button>\\n                <button [disabled]=\\\"processing\\\" type=\\\"button\\\" name=\\\"button\\\" class=\\\"btn btn-sm btn-danger\\\" (click)=\\\"cancelSubmission(blog._id)\\\">Cancel</button>\\n              </form>\\n            </div>\\n           \\n            <li *ngIf=\\\"enabledComments.indexOf(blog._id) === -1 && blog.comments.length > 0\\\" class=\\\"list-group-item\\\">\\n                <span (click)=\\\"expand(blog._id)\\\">\\n                    Show Comments&nbsp;&nbsp;\\n                  <div class=\\\"glyphicon glyphicon-comment\\\"></div>              \\n                  </span>\\n              </li>\\n              <li *ngIf=\\\"enabledComments.indexOf(blog._id) > -1\\\" class=\\\"list-group-item\\\">\\n                  <span (click)=\\\"collapse(blog._id)\\\">\\n                    Hide Comments&nbsp;\\n                  <div class=\\\"glyphicon glyphicon-comment\\\"></div>              \\n                  </span>\\n                </li>\\n            <div *ngIf=\\\"enabledComments.indexOf(blog._id) > -1\\\">\\n                <li *ngFor=\\\"let comment of blog.comments\\\" class=\\\"list-group-item\\\">\\n                    <strong>{{ comment.commentator}}:</strong>{{ comment.comment }}\\n                  </li>\\n            </div>\\n          \\n        </ul>\\n  </div>\\n</div>\\n\"","import { Component, OnInit } from '@angular/core';\nimport { FormControl, FormGroup, FormBuilder, Validators} from '@angular/forms'\nimport { AuthService } from '../../services/auth.service';\nimport { BlogService} from '../../services/blog.service';\n\n@Component({\n  selector: 'app-blog',\n  templateUrl: './blog.component.html',\n  styleUrls: ['./blog.component.css']\n})\nexport class BlogComponent implements OnInit {\n\n\n  messageClass;\n  message;\n  newPost = false;\n  locadingBlogs =  false;\n  form;\n  commentForm;\n  processing = false;\n  username;\n  blogPosts;\n  newComment = [];\n  enabledComments =[];\n\n\n  constructor(\n    private formBuilder: FormBuilder,\n    private authService: AuthService,\n    private blogService: BlogService\n  ) {\n\n    this.createNewBlogForm();\n    this.createCommentForm();\n\n   }\n\n  createNewBlogForm(){ //----------- !@ function\n    this.form = this.formBuilder.group({\n        title:['',Validators.compose([\n          Validators.required,\n          Validators.maxLength(50),\n          Validators.minLength(5),\n          this.alphaNumericValidation          \n        ])],\n        body: ['', Validators.compose([\n          Validators.required,\n          Validators.maxLength(500),\n          Validators.minLength(5)\n        ])]\n    });\n  }\n\n  enableCommetForm(){\n    this.commentForm.get('comment').enable();\n  }\n  disablecommentForm(){\n    this.commentForm.get('comment').disable();\n  }\n\n  enableFormNewBlogForm(){\n    this.form.get('title').enable();\n    this.form.get('body').enable();\n  }\n\n  disableFormNewBlogForm(){\n    this.form.get('title').disable();\n    this.form.get('body').disable();\n  }\n\n  alphaNumericValidation(controls){\n    const regExp =  new RegExp(/^[a-zA-Z0-9]+$/);\n    if(regExp.test(controls.value)){\n      return null;\n    }else{\n      return {  'alphaNumericValidation' : true}\n    }\n  }\n\n  newBlogForm(){ //----------- !@ function\n    this.newPost = true;\n  }\n\n  reloadBlogs(){ //----------- !@ function\n    this.locadingBlogs = true;\n    this.getallBlogs();\n    setTimeout(() => {\n      this.locadingBlogs = false;\n    },4000)\n  }\n\n  draftComment(id){ //----------- !@ function\n    this.commentForm.reset();\n    this.newComment = [];\n    this.newComment.push(id);\n  }\n\n  onBlogSubmit(){\n    this.processing = true;\n    this.disableFormNewBlogForm();\n\n    const blog = {\n      title: this.form.get('title').value,\n      body: this.form.get('body').value,\n      createdBy: this.username\n    }\n\n    this.blogService.newBlog(blog).subscribe((data : any ) => {\n        if(!data.success){\n          this.messageClass = 'alert alert-danger';\n          this.message = data.message;\n          this.processing = false;\n          this.enableFormNewBlogForm();\n        }else{\n          this.messageClass = 'alert alert-success';\n          this.message =  data.message;\n          this.getallBlogs();\n          setTimeout(() => {\n              this.newPost =  false;\n              this.processing = false;\n              this.message =  false;\n              this.form.reset();\n              this.enableFormNewBlogForm();\n          }, 2000);\n        }\n    });\n    \n  }\n\n  goBack(){\n    window.location.reload();\n  }\n\n  getallBlogs(){\n    this.blogService.getAllBlogs().subscribe((data : any) => {\n      this.blogPosts = data.blogs;\n    });\n  }\n\n  likeBlog(id){\n    \n    this.blogService.likeBlog(id).subscribe((data : any) => {\n      this.getallBlogs();\n    });\n  }\n\n  dislikeBlog(id){\n    this.blogService.dislikeBlog(id).subscribe((data : any) => {\n      this.getallBlogs();\n    });\n  }\n\n  createCommentForm(){\n    this.commentForm = this.formBuilder.group({\n      comment: ['', Validators.compose([\n        Validators.required,\n        Validators.maxLength(200),\n        Validators.minLength(1)\n      ])]\n    })\n  }\n  postComment(id){\n    this.disablecommentForm();\n    this.processing = true;\n    const comment = this.commentForm.get('comment').value; // here chek value afer ()... ok\n    // console.log(comment);\n    this.blogService.postcomment(id, comment).subscribe((data : any) => {\n      // console.log(data);\n      this.getallBlogs();\n      const index =  this.newComment.indexOf(id);\n      this.newComment.splice(index, 1);\n      this.enableCommetForm();\n      this.commentForm.reset();\n      this.processing =  false;\n      if(this.enabledComments.indexOf(id) < 0) this.expand(id);\n    })\n  }\n  expand(id){\n    this.enabledComments.push(id);\n  }\n  collapse(id){\n    const index = this.enabledComments.indexOf(id);\n    this.enabledComments.splice(index, 1);\n  }\n\n  cancelSubmission(id){\n    const index = this.newComment.indexOf(id);\n    this.newComment.splice(index, 1);\n    this.commentForm.reset();\n    this.enableCommetForm();\n    this.processing = false;\n  }\n  ngOnInit() {\n    this.authService.getProfile().subscribe((profile : any) => {\n      console.log(profile);\n      this.username = profile.user.username;\n    });\n\n    this.getallBlogs();\n  }\n\n}\n","module.exports = \"\"","module.exports = \"<h1 class=\\\"page-header\\\">Delete Blog</h1>\\n\\n<div class=\\\"row show-hide-message\\\" *ngIf=\\\"message\\\">\\n<div [ngClass]=\\\"messageClass\\\">\\n  {{message}}\\n</div>\\n</div>\\n<div class=\\\"col-md-6\\\" *ngIf=\\\"foundBlog\\\">\\n  <div class=\\\"modal-content\\\">\\n    <div class=\\\"modal-header\\\">\\n        <button type=\\\"button\\\" name=\\\"button\\\" class=\\\"close\\\" data-dismiss=\\\"modal\\\">&times;</button>\\n        <h4 class=\\\"modal-title\\\">Confirm</h4>\\n    </div>\\n    <div class=\\\"modal-body\\\">\\n      <p>are you sure you like to delete this blog?</p>\\n    </div>\\n    <div class=\\\"modal-footer\\\">\\n     \\n      <button [disabled]=\\\"processing\\\" type=\\\"button\\\" name=\\\"button\\\" class=\\\"btn btn-success\\\" (click)=\\\"deleteBlog()\\\">Yes</button>\\n      <a routerLink=\\\"/blog\\\"><button [disabled]=\\\"processing\\\" type=\\\"button\\\" name=\\\"button\\\" class=\\\"btn btn-danger\\\">No</button></a>       \\n    </div>\\n  </div>\\n<br/>\\n  <div class=\\\"panel panel-primary\\\">\\n    <div class=\\\"panel-heading\\\">\\n      <h3 class=\\\"panel-title\\\">{{blog.title}}</h3>\\n\\n    </div>\\n    <div class=\\\"panel-body\\\">\\n      {{blog.body}}\\n    </div>\\n    <div class=\\\"panel-footer\\\">\\n      <strong>Posted by:</strong> {{ blog.createdBy}}\\n      <br />\\n      <strong>Date:</strong> {{ blog.createdAt | date:'MMM dd, yyyy'}}\\n      \\n    </div>\\n\\n  </div>\\n\\n</div>\""," import { Component, OnInit } from '@angular/core';\n import { BlogService} from '../../../services/blog.service';\n import { ActivatedRoute, Router}  from '@angular/router';\n@Component({\n  selector: 'app-delete-blog',\n  templateUrl: './delete-blog.component.html',\n  styleUrls: ['./delete-blog.component.css']\n})\nexport class DeleteBlogComponent implements OnInit {\n\n\n  message;\n  messageClass;\n  foundBlog =  false;\n  processing = false;\n  blog;\n  currentUrl;\n  constructor(\n    private blogService: BlogService,\n    private activatedRoute: ActivatedRoute,\n    private router: Router\n  ) { }\n\n  deleteBlog(){\n    this.processing =  true;\n    this.blogService.deleteBlog(this.currentUrl.id).subscribe((data:any) => {\n        if(!data.success){\n          this.messageClass = 'alert alert-danger';\n          this.message = data.message\n        }else{\n          this.messageClass = 'alert alert-success';\n          this.message = data.message\n          setTimeout(() => {\n              this.router.navigate(['/blog']);\n          }, 2000);\n        }\n    })\n  }\n  ngOnInit() {\n    this.currentUrl= this.activatedRoute.snapshot.params;\n      this.blogService.getSingleBlog(this.currentUrl.id).subscribe((data :any) =>{\n        if(!data.success){\n          this.messageClass = 'alert alert-danger';\n          this.message = data.message;\n          this.processing =false;\n        }else{\n          this.blog={\n            title: data.blog.title,\n            body: data.blog.body,\n            createdBy: data.blog.createdBy,\n            createdAt: data.blog.createdAt\n          }\n          this.foundBlog = true;\n        }\n      })\n  }\n\n}\n","module.exports = \"\"","module.exports = \"<h1 class=\\\"page-header\\\">Edit Blog</h1>\\n\\n<div class=\\\"row show-hide-message\\\" *ngIf=\\\"message\\\">\\n  <div [ngClass]=\\\"messageClass\\\">\\n    {{message}}\\n  </div>\\n</div>\\n\\n<form (submit)=\\\"updateBlogSubmit()\\\" *ngIf=\\\"!loading\\\">\\n  <div class=\\\"form-group\\\">\\n    <label for=\\\"title\\\">Title</label>\\n    <input [disabled]=\\\"processing\\\" type=\\\"text\\\"  name=\\\"title\\\" placeholder=\\\"*Blog Title\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"blog.title\\\" />\\n  </div>\\n\\n  <div class=\\\"form-group\\\">\\n      <label for=\\\"body\\\">Body</label>\\n    <textarea [disabled]=\\\"processing\\\" name=\\\"body\\\" rows=\\\"8\\\" cols=\\\"80\\\" [(ngModel)]=\\\"blog.body\\\" class=\\\"form-control\\\" placeholder=\\\"*Blog body\\\"></textarea>\\n\\n    <a [routerLink]=\\\"['/delete-blog/', blog._id]\\\"><button [disabled]=\\\"processing\\\" type=\\\"button\\\" name=\\\"button\\\" class=\\\"btn btn-danger\\\">Delete</button></a>\\n    <button [disabled]=\\\"processing\\\" type=\\\"button\\\" name=\\\"button\\\" class=\\\"btn btn-success\\\" (click)=\\\"goBack()\\\">Go Back</button>\\n    <button [disabled]=\\\"processing\\\" type=\\\"submit\\\" name=\\\"save\\\" class=\\\"btn btn-info\\\">Save Changes</button>\\n    </div>\\n</form>\"","import { Component, OnInit } from '@angular/core';\nimport { Location } from '@angular/common';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { BlogService } from '../../../services/blog.service';\n\n@Component({\n  selector: 'app-edit-blog',\n  templateUrl: './edit-blog.component.html',\n  styleUrls: ['./edit-blog.component.css']\n})\nexport class EditBlogComponent implements OnInit {\n\n\n  message;\n  messageClass;\n  currentUrl;\n  blog;\n  processing =  false;\n  loading =  true;\n\n\n  constructor(\n    private location: Location,\n    private blogService: BlogService,\n    private activetedRoute: ActivatedRoute,\n    private router: Router\n  ) { }\n\n\n  updateBlogSubmit(){\n    this.processing = true;\n    // Function update blog\n    this.blogService.editBlog(this.blog).subscribe((data :any) => {\n      if(!data.success){\n        this.messageClass = 'alert alert-danger';\n        this.message = data.message;\n        this.processing = false;\n      }else{  \n        this.messageClass = 'alert alert-success';\n        this.message = data.message;\n        setTimeout(() => {\n          this.router.navigate(['/blog']);\n        }, 2000);\n      }\n    });\n  }\n  goBack(){\n    this.location.back();\n  }\n  ngOnInit() {\n    this.currentUrl = this.activetedRoute.snapshot.params;\n    // alert(this.currentUrl.id);\n    this.blogService.getSingleBlog(this.currentUrl.id).subscribe((data :any) => {\n      console.log('edit blog data:-'+ data);\n      if(!data.success){\n        this.messageClass = 'alert alert-danger';\n        this.message = 'Blog Not Found';\n      }else{\n        alert(data.blog.title);\n      this.blog = data.blog;\n        this.loading = false;\n      }\n\n    });\n  }\n\n}\n","module.exports = \"\"","module.exports = \"<h1 class=\\\"page.header\\\">DashBoard Route</h1>\\n\"","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-dashboard',\n  templateUrl: './dashboard.component.html',\n  styleUrls: ['./dashboard.component.css']\n})\nexport class DashboardComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","module.exports = \"\"","module.exports = \"<div class=\\\"jumbotron text-center\\\">\\n        <h1>MEAN Stack Application Blog</h1>\\n        <p class=\\\"lead\\\">Welcome to the MEAN Stack Application by <strong>Confuse don</strong></p>\\n        <div>\\n          <a *ngIf=\\\"!authService.isLoggedIn()\\\" routerLink=\\\"/register\\\" class=\\\"btn btn-primary\\\">Register</a>\\n          <a *ngIf=\\\"!authService.isLoggedIn()\\\" routerLink=\\\"/login\\\" class=\\\"btn btn-default\\\">Login</a>\\n          <a *ngIf=\\\"authService.isLoggedIn()\\\" routerLink=\\\"/blog\\\" class=\\\"btn btn-success\\\">View Blogs</a>\\n        </div>\\n      </div>\\n      \\n      <div class=\\\"row\\\">\\n        <div class=\\\"col-sm-6 col-md-4\\\">\\n          <div class=\\\"thumbnail\\\">\\n            <img src=\\\"https://image.flaticon.com/icons/svg/417/417745.svg\\\" alt=\\\"placeholder image\\\" width=\\\"140\\\" height=\\\"140\\\">\\n            <div class=\\\"caption\\\">\\n              <h3>MongoDB</h3>\\n              <p>MongoDB is a free and open-source cross-platform document-oriented database program. This NoSQL database program uses JSON-like documents with schemas.</p>\\n            </div>\\n          </div>\\n        </div>\\n      \\n        <div class=\\\"col-sm-6 col-md-4\\\">\\n          <div class=thumbnail> <img src=\\\"https://image.flaticon.com/icons/svg/417/417746.svg\\\" alt=\\\"Generic placeholder image\\\" width=\\\"140\\\" height=\\\"140\\\">\\n            <div class=caption>\\n              <h3>ExpressJS</h3>\\n              <p>Express.js is a Node.js framework. Node.js is a platform that allows JavaScript to be used outside the Web Browsers, for creating web and network applications.</p>\\n            </div>\\n          </div>\\n        </div>\\n      \\n        <div class=\\\"col-sm-6 col-md-4\\\">\\n          <div class=thumbnail> <img src=\\\"https://image.flaticon.com/icons/svg/417/417751.svg\\\" alt=\\\"Generic placeholder image\\\" width=\\\"140\\\" height=\\\"140\\\">\\n            <div class=caption>\\n              <h3>Angular 2</h3>\\n              <p>Angular is a development platform for building mobile and desktop web applications. Ut dignissim eleifend maximus. Ut dignissim eleifend maximus. Ut dignissim eleifend.</p>\\n            </div>\\n          </div>\\n        </div>\\n      \\n        <div class=\\\"col-sm-6 col-md-4\\\">\\n          <div class=thumbnail> <img src=\\\"https://image.flaticon.com/icons/svg/417/417754.svg\\\" alt=\\\"Generic placeholder image\\\" width=\\\"140\\\" height=\\\"140\\\">\\n            <div class=caption>\\n              <h3>NodeJS</h3>\\n              <p>Node.js is a JavaScript runtime built on Chrome's V8 JavaScript engine. Node.js uses an event-driven, non-blocking I/O model that makes it lightweight and efficient.</p>\\n            </div>\\n          </div>\\n        </div>\\n      \\n        <div class=\\\"col-sm-6 col-md-4\\\">\\n          <div class=thumbnail> <img src=\\\"https://image.flaticon.com/icons/svg/417/417768.svg\\\" alt=\\\"Generic placeholder image\\\" width=\\\"140\\\" height=\\\"140\\\">\\n            <div class=caption>\\n              <h3>Lorem Ipsum</h3>\\n              <p>Cras justo odio, dapibus ac facilisis in, egestas eget quam. Donec id elit non mi porta gravida at eget metus. Nullam id dolor id nibh ultricies vehicula ut id elit.</p>\\n            </div>\\n          </div>\\n        </div>\\n      \\n        <div class=\\\"col-sm-6 col-md-4\\\">\\n          <div class=thumbnail> <img src=\\\"https://image.flaticon.com/icons/svg/417/417764.svg\\\" alt=\\\"Generic placeholder image\\\" width=\\\"140\\\" height=\\\"140\\\">\\n            <div class=caption>\\n              <h3>Lorem Ipsum</h3>\\n              <p>Cras justo odio, dapibus ac facilisis in, egestas eget quam. Donec id elit non mi porta gravida at eget metus. Nullam id dolor id nibh ultricies vehicula ut id elit.</p>\\n            </div>\\n          </div>\\n        </div>\\n      \\n      </div>\\n      \"","import { Component, OnInit } from '@angular/core';\nimport { AuthService} from '../../services/auth.service';\n\n@Component({\n  selector: 'app-home',\n  templateUrl: './home.component.html',\n  styleUrls: ['./home.component.css']\n})\nexport class HomeComponent implements OnInit {\n\n  constructor(\n    public authService: AuthService\n  ) { }\n\n  ngOnInit() {\n  }\n\n}\n","module.exports = \"\"","module.exports = \"<h2 class=\\\"page-header\\\">login</h2>\\n\\n<div class=\\\"row show-hide-mesage\\\">\\n  <div [ngClass]=\\\"messageClass\\\">\\n    {{message}}\\n  </div>\\n</div>\\n\\n<form [formGroup]=\\\"form\\\" (submit)=\\\"onLoginSubmit()\\\">\\n  <div class=\\\"form-group\\\">\\n    <label for=\\\"username\\\">Username</label>\\n    <div [ngClass]=\\\"{'has-error': form.controls.username.errors && form.controls.username.dirty, 'has-success': form.controls.username.valid && form.controls.username.dirty}\\\">\\n      <input class=\\\"form-control\\\" type=\\\"text\\\" name=\\\"username\\\" formControlName=\\\"username\\\"/>\\n      <ul class=\\\"help-block\\\">\\n        <li *ngIf=\\\"form.controls.username.errors?.required && form.controls.username.dirty\\\">This filed is required</li>\\n      </ul>\\n    </div>\\n  </div>\\n\\n  <div class=\\\"form-group\\\">\\n    <label for=\\\"password\\\">Password</label>\\n    <div [ngClass]=\\\"{'has-error': form.controls.password.errors && form.controls.password.dirty, 'has-success': form.controls.password.valid && form.controls.password.dirty}\\\">\\n        <input class=\\\"form-control\\\" type=\\\"password\\\" name=\\\"password\\\" formControlName=\\\"password\\\"/>\\n        <ul class=\\\"help-block\\\">\\n          <li *ngIf=\\\"form.controls.password.errors?.required && form.controls.password.dirty\\\">This filed is required</li>\\n        </ul>\\n      </div>\\n  </div>\\n\\n    <input  [disabled]=\\\"!form.valid || processing\\\" class=\\\"btn btn-primary\\\" type=\\\"submit\\\" value=\\\"Login\\\"/>\\n</form>\"","import { Component, OnInit } from '@angular/core';\nimport { FormGroup, FormBuilder, Validators, FormControl } from '@angular/forms';\nimport { AuthService } from '../../services/auth.service';\nimport { Router } from '@angular/router';\nimport { AuthGuard } from '../../guards/auth.guard';\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.css']\n})\nexport class LoginComponent implements OnInit {\n\n\n  messageClass;\n  message;\n  processing = false;\n  form;\n  PreviousUrl;\n\n  constructor(\n    private formBuilder: FormBuilder,\n    private authService: AuthService,\n    private router: Router,\n    private authGuard: AuthGuard\n  ) {\n    this.createForm();\n  }\n\n\n  createForm() {\n    this.form = this.formBuilder.group({\n      username: ['', Validators.required],\n      password: ['', Validators.required]\n    });\n\n  }\n\n  disableForm() {\n    this.form.controls['username'].disable();\n    this.form.controls['password'].disable();\n  }\n\n  enableForm() {\n    this.form.controls['username'].enable();\n    this.form.controls['password'].enable();\n  }\n\n  onLoginSubmit() {\n    this.processing = true;\n    this.disableForm();\n    const user = {\n      username: this.form.get('username').value,\n      password: this.form.get('password').value\n    }\n\n    this.authService.login(user).subscribe((data: any) => {\n      // @Check if response was a success or error.\n      if (!data.success) {\n        this.messageClass = 'alert alert-danger'; // @Set bootstrtap error class.\n        this.message = data.message; // @Set error message.\n        this.processing = false; // @Enable submit button.\n        this.enableForm();  // @Enable form for Editing.\n      } else {\n        this.messageClass = 'alert alert-success';  // @Set bootstrap success class.\n        this.message = data.message; // @Se success message.\n        // @Function to store user's token in client local storage\n        this.authService.storeUserData(data.token, data.user);\n        // @After 2 second, redirect to dash board page.\n        setTimeout(() => {\n          if (this.PreviousUrl) {\n            this.router.navigate([this.PreviousUrl]);\n          } else {\n            this.router.navigate(['/dashboard']); // @navigate to dashboard view.\n          }\n        }, 2000)\n      }\n    });\n  }\n  ngOnInit() {\n\n    if (this.authGuard.redirectUrl) { // here \"redirectURL\" is part of auth gard check first authgard.!\n      this.messageClass = 'alert alert-danger';\n      this.message = 'You Must be logged in to view that page';\n      this.PreviousUrl = this.authGuard.redirectUrl;\n      this.authGuard.redirectUrl = undefined;\n    }\n  }\n\n}\n","module.exports = \"\"","module.exports = \" <!-- Fixed navbar -->\\n <!-- <nav class=\\\"navbar navbar-inverse navbar-fixed-top\\\"> -->\\n <nav class=\\\"navbar navbar-default\\\">\\n\\n  <div class=\\\"container\\\">\\n    <div class=\\\"navbar-header\\\">\\n      <button type=\\\"button\\\" class=\\\"navbar-toggle collapsed\\\" data-toggle=\\\"collapse\\\" data-target=\\\"#navbar\\\" aria-expanded=\\\"false\\\" aria-controls=\\\"navbar\\\">\\n        <span class=\\\"sr-only\\\">Toggle navigation</span>\\n        <span class=\\\"icon-bar\\\"></span>\\n        <span class=\\\"icon-bar\\\"></span>\\n        <span class=\\\"icon-bar\\\"></span>\\n      </button>\\n      <a class=\\\"navbar-brand\\\" routerLink=\\\"/\\\">MEAN Stack Blog</a>\\n    </div>\\n    <div id=\\\"navbar\\\" class=\\\"navbar-collapse collapse\\\">\\n      <ul class=\\\"nav navbar-nav navbar-left\\\">\\n        <li [routerLinkActive]=\\\"['active']\\\" [routerLinkActiveOptions]=\\\"{exact:true}\\\"><a routerLink=\\\"/\\\">Home</a></li>\\n      </ul>\\n      <ul class=\\\"nav navbar-nav navbar-right\\\">\\n          <li *ngIf=\\\"authSevice.isLoggedIn()\\\" [routerLinkActive]=\\\"['active']\\\" [routerLinkActiveOptions]=\\\"{exact:true}\\\"><a routerLink=\\\"/dashboard\\\">DashBoard</a></li>\\n          <li><a *ngIf=\\\"authSevice.isLoggedIn()\\\" routerLink=\\\"/profile\\\">Profile</a></li>\\n          <li><a *ngIf=\\\"authSevice.isLoggedIn()\\\" routerLink=\\\"/blog\\\">Blog</a></li>\\n          <li><a *ngIf=\\\"!authSevice.isLoggedIn()\\\" routerLink=\\\"/login\\\">Login</a></li>\\n          <li><a *ngIf=\\\"authSevice.isLoggedIn()\\\" routerLink=\\\"/#\\\" (click)=\\\"onLogoutClick()\\\">LogOut</a></li>\\n          <li *ngIf=\\\"!authSevice.isLoggedIn()\\\" [routerLinkActive]=\\\"['active']\\\" [routerLinkActiveOptions]=\\\"{exact:true}\\\"><a routerLink=\\\"/register\\\">Register</a></li>\\n\\n\\n      </ul>\\n    </div><!--/.nav-collapse -->\\n  </div>\\n</nav>\\n\"","import { Component, OnInit } from '@angular/core';\nimport { AuthService} from '../../services/auth.service';\nimport { Router } from '@angular/router';\nimport { NgFlashMessageService  } from 'ng-flash-messages';\n@Component({\n  selector: 'app-navbar',\n  templateUrl: './navbar.component.html',\n  styleUrls: ['./navbar.component.css']\n})\nexport class NavbarComponent implements OnInit {\n\n  constructor(\n    public authSevice: AuthService,\n    private router: Router,\n    private ngFlashMessageService: NgFlashMessageService\n  ) { }\n\n  ngOnInit() {\n  }\n\n  onLogoutClick(){\n    this.authSevice.logout();\n    this.ngFlashMessageService.showFlashMessage({messages:['you have looged out'],type:'success'});\n    this.router.navigate(['/']);\n  }\n}\n","module.exports = \"\"","module.exports = \"<h2 class=\\\"page-header\\\">Profile Page</h2>\\n<ul class=\\\"list-group\\\">\\n  <li class=\\\"list-group-item\\\">Username:{{ username }}</li>\\n  <li class=\\\"list-group-item\\\">Email:{{email}}</li>\\n</ul>\\n\"","import { Component, OnInit } from '@angular/core';\nimport { AuthService } from '../../services/auth.service';\n@Component({\n  selector: 'app-profile',\n  templateUrl: './profile.component.html',\n  styleUrls: ['./profile.component.css']\n})\nexport class ProfileComponent implements OnInit {\n\n\n  username;\n  email;\n\n  constructor(\n    private authService: AuthService\n  ) { }\n\n  ngOnInit() {\n\n    this.authService.getProfile().subscribe((profile : any) => {\n      this.username = profile.user.username;\n      this.email =  profile.user.email;\n      // console.log(profile.user.username);\n    });\n  }\n\n}\n","module.exports = \"\"","module.exports = \"<h1 class=\\\"page-header\\\">Public Profile</h1>\\n\\n<div class=\\\"row show-hide-message\\\" *ngIf=\\\"message\\\">\\n  <div [ngClass]=\\\"messageClass\\\">\\n    {{message}}\\n  </div>\\n</div>\\n\\n\\n<ul *ngIf=\\\"foundProfile\\\" class=\\\"list-group\\\">\\n  <li class=\\\"list-group-item\\\"><strong>Username:-</strong>{{ username }}</li>\\n  <li class=\\\"list-group-item\\\"><strong>Email:-</strong>{{ email }}</li>  \\n</ul>\\n\"","import { Component, OnInit } from '@angular/core';\nimport { AuthService } from '../../services/auth.service';\nimport { Router, ActivatedRoute } from '@angular/router'\n@Component({\n  selector: 'app-public-profile',\n  templateUrl: './public-profile.component.html',\n  styleUrls: ['./public-profile.component.css']\n})\nexport class PublicProfileComponent implements OnInit {\n\n\n  currentUrl;\n  username;\n  email;\n  foundProfile =  false;\n  message;\n  messageClass;\n\n\n  constructor(\n    private authService: AuthService,\n    private activatedRoute: ActivatedRoute,\n    private router: Router\n\n  ) { }\n\n  ngOnInit() {\n    this.currentUrl =  this.activatedRoute.snapshot.params;\n      this.authService.getPublicProfile(this.currentUrl.username).subscribe((data : any) => {\n        // console.log(data.user);\n\n        if(!data.success){\n          this.messageClass = 'alert alert-danger';\n          this.message = data.message;\n          this.foundProfile = false;\n        }else{\n          this.username =  data.user.username;\n          this.email = data.user.email;\n          this.foundProfile = true;    \n        }\n \n    })\n  }\n\n}\n","module.exports = \"\"","module.exports = \"<h1 class=\\\"page-header\\\">Register here..</h1>\\n\\n<div class=\\\"row show-hide-message\\\">\\n    <div [ngClass]=\\\"messageClass\\\">\\n      {{message}}\\n    </div>\\n\\n</div>\\n\\n<!-- Registrtaion Form-->\\n<form [formGroup]=\\\"form\\\" (submit)=\\\"onRegisterSubmit()\\\">\\n  <!-- Username start -->\\n  <div class=\\\"form-group\\\">\\n    <label for=\\\"username\\\">Username</label>\\n    <div [ngClass]=\\\"{'has-error': (form.controls.username.errors && form.controls.username.dirty) || (!usernameValid && form.controls.username.dirty), 'has-success': !form.controls.username.errors && usernameValid}\\\">\\n      <input type=\\\"text\\\" name=\\\"username\\\" class=\\\"form-control\\\" autocomplete=\\\"off\\\" placeholder=\\\"*Username\\\" formControlName=\\\"username\\\" (blur)=\\\"checkUsername()\\\"/>\\n      <ul class=\\\"help-block\\\">\\n        <li *ngIf=\\\"form.controls.username.errors?.required && form.controls.username.dirty\\\">This field is requierd</li>\\n        <li *ngIf=\\\"form.controls.username.errors?.minlength || form.controls.username.errors?.maxlength\\\">Minimum characters:3, Macimum characters: 15</li>\\n        <li *ngIf=\\\"form.controls.username.errors?.validateUsername && form.controls.username.dirty\\\">Username must not have any special characters</li>\\n        <li *ngIf=\\\"usernameMessage\\\">{{usernameMessage}}</li>\\n      </ul>\\n    </div> \\n  </div>\\n  <!-- Username End -->\\n\\n\\n  <!-- Email Start -->\\n\\n  <div class=\\\"form-group\\\">\\n      <label for=\\\"email\\\">Email</label>\\n      <div [ngClass]=\\\"{'has-error': (form.controls.email.errors && form.controls.email.dirty) || (!emailValid && form.controls.email.dirty), 'has-success': !form.controls.email.errors && emailValid}\\\">\\n        <input type=\\\"text\\\" name=\\\"email\\\" class=\\\"form-control\\\" autocomplete=\\\"off\\\" placeholder=\\\"*Email\\\" formControlName=\\\"email\\\" (blur)=\\\"checkEmail()\\\"/>\\n        <ul class=\\\"help-block\\\">\\n          <li *ngIf=\\\"form.controls.email.errors?.required && form.controls.email.dirty\\\">This field is requierd</li>\\n          <li *ngIf=\\\"(form.controls.username.errors?.minlength || form.controls.username.errors?.maxlength) && form.controls.email.dirty\\\">Minimum characters:5, Maximum characters: 30</li>\\n          <li *ngIf=\\\"form.controls.email.errors?.validateEmail && form.controls.email.dirty\\\">This must be a valid e-mail</li>\\n          <li *ngIf=\\\"emailMessage\\\">{{emailMessage}}</li>\\n        </ul>\\n      </div> \\n    </div>\\n\\n  <!-- Email End -->\\n\\n\\n\\n  <!-- Password Start -->\\n\\n    <div class=\\\"form-group\\\">\\n        <label for=\\\"password\\\">Password</label>\\n        <div [ngClass]=\\\"{'has-error': (form.controls.password.errors && form.controls.password.dirty), 'has-success': !form.controls.password.errors}\\\">\\n          <input type=\\\"password\\\" name=\\\"password\\\" class=\\\"form-control\\\" autocomplete=\\\"off\\\" placeholder=\\\"*Password\\\" formControlName=\\\"password\\\"/>\\n          <ul class=\\\"help-block\\\">\\n            <li *ngIf=\\\"form.controls.password.errors?.required && form.controls.password.dirty\\\">This field is requierd</li>\\n            <li *ngIf=\\\"form.controls.password.errors?.minlength || form.controls.password.errors?.maxlength\\\">Minimum characters: 8, Maximum characters: 35</li>\\n            <li *ngIf=\\\"form.controls.password.errors?.validatePassword && form.controls.password.dirty\\\">Must have at least one uppercase, lowercase, special cheracters, and number</li>\\n          </ul>\\n        </div> \\n      </div>\\n\\n  <!-- Password End -->\\n\\n\\n  <!-- Confirm Start -->\\n      \\n      <div class=\\\"form-group\\\">\\n          <label for=\\\"confirm\\\">Confirm Password</label>\\n          <div [ngClass]=\\\"{'has-error': (form.controls.confirm.errors && form.controls.confirm.dirty) || (form.errors?.matchingPasswords && form.controls.confirm.dirty), 'has-success': !form.controls.confirm.errors && !form.errors?.matchingPasswords}\\\">\\n            <input type=\\\"password\\\" name=\\\"confirm\\\" class=\\\"form-control\\\" autocomplete=\\\"off\\\" placeholder=\\\"*Confirm Password\\\" formControlName=\\\"confirm\\\"/>\\n            <ul class=\\\"help-block\\\">\\n              <li *ngIf=\\\"form.controls.confirm.errors?.required && form.controls.confirm.dirty\\\">This field is requierd</li>\\n              <li *ngIf=\\\"form.errors?.matchingPasswords && form.controls.confirm.dirty\\\">Password Do not match !</li>\\n            </ul>\\n          </div> \\n        </div>\\n  <!-- Confirm End -->\\n\\n        <input [disabled]=\\\"!form.valid || processing || !emailValid || !usernameValid\\\" type=\\\"submit\\\" class=\\\"btn btn-primary\\\" value=\\\"Submit\\\" />\\n\\n        <!-- <p>Username: {{form.controls.username.value}}</p>\\n        <p>email: {{form.controls.email.value}}</p>\\n        <p>password: {{form .controls.password.value}}</p> -->\\n</form> \"","import { Component, OnInit } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators} from '@angular/forms';\nimport { AuthService } from '../../services/auth.service';\nimport { Router } from '@angular/router';\n@Component({\n  selector: 'app-register',\n  templateUrl: './register.component.html',\n  styleUrls: ['./register.component.css']\n})\nexport class RegisterComponent implements OnInit {\n\nform;\nmessage;\nmessageClass;\nprocessing = false;\nemailValid;\nemailMessage;\nusernameValid;\nusernameMessage;\n\n  constructor(\n    private formBuilder: FormBuilder,\n    private authService: AuthService,\n    private router: Router\n  ) { \n    this.createForm();\n  }\n\n\n\n  createForm(){\n    this.form =  this.formBuilder.group({\n      email: ['',Validators.compose([\n        Validators.required,\n        Validators.minLength(5),\n        Validators.maxLength(30),\n        this.validateEmail\n      ])],\n      username: ['',Validators.compose([\n        Validators.required,\n        Validators.minLength(3),\n        Validators.maxLength(15),\n        this.validateUsername\n      ])],\n      password: ['',Validators.compose([\n        Validators.required,\n        Validators.minLength(8),\n        Validators.maxLength(35),\n        this.validatePassword\n      ])],\n      confirm: ['',Validators.required]\n    }, {validator: this.matchingPasswords('password', 'confirm')});\n  }\n\n  disableForm(){\n    this.form.controls['email'].disable();\n    this.form.controls['username'].disable();\n    this.form.controls['password'].disable();\n    this.form.controls['confirm'].disable();\n\n  }\n\n  enableForm(){\n    this.form.controls['email'].enable();\n    this.form.controls['username'].enable();\n    this.form.controls['password'].enable();\n    this.form.controls['confirm'].enable();\n  }\n\n\n  validateEmail(controls){\n    const regExp = new RegExp(/^(([^<>()\\[\\]\\\\.,;:\\s@\"]+(\\.[^<>()\\[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/);\n    if(regExp.test(controls.value)){\n      return null;\n    }else{\n      return { 'validateEmail': true}\n    }\n  }\n\n  validateUsername(controls){\n    const regExp = new RegExp(/^[a-zA-Z0-9]+$/);\n    if(regExp.test(controls.value)){\n      return null;\n    }else{\n      return { 'validateUsername': true}\n    }\n  }\n\n  validatePassword(controls){\n    const regExp = new RegExp(/^(?=.*?[a-z])(?=.*?[A-Z])(?=.*?[\\d])(?=.*?[\\W]).{8,35}$/);    \n    if(regExp.test(controls.value)){\n      return null;\n    }else{\n      return { 'validatePassword': true}\n    }\n  }\n\n  matchingPasswords(password, confirm){\n    return (group: FormGroup) =>{\n      if(group.controls[password].value === group.controls[confirm].value){\n        return null;\n      }else{\n        return { 'matchingPasswords': true }\n      }\n    }\n  }\n  \n\n  // Function to submit form\n  onRegisterSubmit(){\n    this.processing = true;\n    this.disableForm();\n    const user ={\n      email: this.form.get('email').value,\n      username: this.form.get('username').value,\n      password: this.form.get('password').value\n    }\n  \n    this.authService.registerUser(user).subscribe((res: any) => {\n      console.log(res);\n      if(!res.success){\n       this.messageClass = 'alert alert-danger';\n       this.message = res.message;\n       this.processing = false;\n       this.enableForm();\n      }else{\n        this.messageClass = 'alert alert-success';\n       this.message = res.message;\n       setTimeout(() => {\n         this.router.navigate(['/login']);\n       },2000)\n      }\n    })\n\n    // console.log(this.form.get('email').value);\n    // console.log(this.form.get('username').value);\n\n  }\n\n  checkEmail(){\n    this.authService.checkEmail(this.form.get('email').value).subscribe((data :any) => {\n      if(!data.success){\n        this.emailValid = false;\n        this.emailMessage = data.message;\n      }else{\n        this.emailValid =  true;\n        this.emailMessage = data.message;\n      }\n    })\n  }\n\n  checkUsername(){\n    this.authService.checkUsername(this.form.get('username').value).subscribe((data :any) => {\n      if(!data.success){\n        this.usernameValid = false;\n        this.usernameMessage = data.message;\n      }else{\n        this.usernameValid =  true;\n        this.usernameMessage = data.message;\n      }\n    })\n  }\n\n  ngOnInit() {\n  }\n\n}\n","import { Injectable }     from '@angular/core';\r\nimport { CanActivate, ActivatedRouteSnapshot, RouterStateSnapshot, }    from '@angular/router';\r\nimport { AuthService } from '../services/auth.service';\r\nimport { Router } from '@angular/router';\r\n\r\n@Injectable()\r\nexport class AuthGuard implements CanActivate {\r\n\r\n    redirectUrl;\r\n\r\n    constructor(\r\n        private authService: AuthService,\r\n        private router: Router\r\n    ){}\r\n\r\n  canActivate(\r\n      router: ActivatedRouteSnapshot,\r\n      state: RouterStateSnapshot\r\n  ) {\r\n    // console.log('AuthGuard#canActivate called');\r\n    // return true;\r\n\r\n    if(this.authService.isLoggedIn()){\r\n        return true;\r\n    }else{\r\n        this.redirectUrl = state.url;\r\n        this.router.navigate(['/login']);\r\n        return false;\r\n    }\r\n  }\r\n}","import { Injectable }     from '@angular/core';\r\nimport { CanActivate }    from '@angular/router';\r\nimport { AuthService } from '../services/auth.service';\r\nimport { Router } from '@angular/router';\r\n\r\n@Injectable()\r\nexport class NotAuthGuard implements CanActivate {\r\n\r\n    constructor(\r\n        private authService: AuthService,\r\n        private router: Router\r\n    ){}\r\n\r\n  canActivate() {\r\n    // console.log('AuthGuard#canActivate called');\r\n    // return true;\r\n\r\n    if(this.authService.isLoggedIn()){\r\n        this.router.navigate(['/']);\r\n        return false;\r\n    }else{\r\n        return true;\r\n    }\r\n  }\r\n}","import { Injectable } from '@angular/core';\nimport { HttpClient, HttpHeaders, HttpHeaderResponse } from '@angular/common/http';\nimport { map } from 'rxjs/operators';\nimport { JwtHelperService } from '@auth0/angular-jwt';\n\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AuthService {\n\n  domain = \"http://localhost:8080/\";\n\n  authToken;\n  user;\n  options;\n  constructor(\n    private http: HttpClient,\n    private jwtHelper: JwtHelperService\n  ) { }\n\n  createAuthenticationHeaders() {\n    this.loadToken();\n    this.options = new HttpHeaderResponse({\n      headers: new HttpHeaders({\n        'Content-Type': 'application/json',\n        'authorization': this.authToken\n      })\n    })\n\n  }\n\n  loadToken() {\n    const token = localStorage.getItem('token');\n    this.authToken = token;\n\n  }\n\n  registerUser(user) {\n    return this.http.post(this.domain + 'authentication/register', user)\n      .pipe(map(res => {\n        return res;\n      }))\n  }\n\n  checkUsername(username) {\n    return this.http.get(this.domain + 'authentication/checkUsername/' + username)\n      .pipe(map(res => {\n        return res;\n      }))\n  }\n\n  checkEmail(email) {\n    return this.http.get(this.domain + 'authentication/checkEmail/' + email)\n      .pipe(map(res => {\n        return res;\n      }))\n  }\n\n  login(user) {\n    return this.http.post(this.domain + 'authentication/login', user).pipe(map(res => {\n      return res;\n    }));\n  }\n\n  logout() {\n    this.authToken = null;\n    this.user = null;\n    localStorage.clear();\n  }\n  storeUserData(token, user) {\n    localStorage.setItem('token', token);\n    localStorage.setItem('user', JSON.stringify(user))\n    this.authToken = token;\n    this.user = user;\n  }\n\n  getProfile() {\n    this.createAuthenticationHeaders();\n    return this.http.get(this.domain + 'authentication/profile', this.options)\n      .pipe(map(res => {\n        return res;\n      }));\n  }\n  isLoggedIn() {\n    // return this.jwtHelper.isTokenExpired();\n    const token = localStorage.getItem('token');\n    return !this.jwtHelper.isTokenExpired(token);\n  }\n\n  getPublicProfile(username){\n    this.createAuthenticationHeaders();\n    return this.http.get(this.domain + 'authentication/publicProfile/' + username, this.options)\n    .pipe(map(res => {\n      return res;\n    }))\n  }\n}\n\n","import { Injectable } from '@angular/core';\nimport { HttpClient, HttpHeaders, HttpHeaderResponse } from '@angular/common/http';\nimport { AuthService } from './auth.service';\nimport { map } from 'rxjs/operators';\n\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class BlogService {\n\n\n  options;\n  domain = this.authService.domain;\n\n  constructor(\n    private authService: AuthService,\n    private http: HttpClient\n  ) { }\n\n\n  \n  createAuthenticationHeaders() {\n    this.authService.loadToken();\n    this.options = new HttpHeaderResponse({\n      headers: new HttpHeaders({\n        'Content-Type': 'application/json',\n        'authorization': this.authService.authToken\n      })\n    })\n\n  }\n\n  newBlog(blog){\n    this.createAuthenticationHeaders();\n    return this.http.post(this.domain + 'blogs/newBlog', blog, this.options)\n    .pipe(map(res => {\n      return res;\n    }))\n  }\n\n  getAllBlogs(){\n    this.createAuthenticationHeaders();\n    return this.http.get(this.domain + 'blogs/allBlogs', this.options)\n    .pipe(map(res => {\n      return res;\n    }))\n  }\n\n  getSingleBlog(id){\n    this.createAuthenticationHeaders();\n    return this.http.get(this.domain + 'blogs/singleBlog/' + id, this.options)\n    .pipe(map(res => {\n      return res;\n    }))\n  }\n\n  editBlog(blog){\n    this.createAuthenticationHeaders();\n    return this.http.put(this.domain + 'blogs/updateBlog/', blog, this.options)\n    .pipe(map(res => {\n      return res;\n    }))\n  }\n\n  deleteBlog(id){\n    this.createAuthenticationHeaders();\n    return this.http.delete(this.domain + 'blogs/deleteBlog/' + id, this.options)\n    .pipe(map(res => {\n      return res;\n    }));\n  }\n\n\n  likeBlog(id){\n    const blogData =  { id: id};\n    return this.http.put(this.domain + 'blogs/likeBlog/', blogData, this.options)\n    .pipe(map(res => {\n      console.log('blog Data:-'+ res);\n      return res;\n    }))\n  }\n  dislikeBlog(id){\n    const blogData =  {id: id};\n    return this.http.put(this.domain + 'blogs/dislikeBlog/', blogData, this.options)\n    .pipe(map(res => {\n      return res;\n    }))\n  }\n\n  postcomment(id, comment){\n    this.createAuthenticationHeaders();\n    const blogData = {\n      id: id,\n      comment: comment\n    }\n\n    return this.http.post(this.domain + 'blogs/comment', blogData, this.options)\n    .pipe(map(res => {\n      // console.log(\"comment data:- \"+res);\n        return res;\n    }));\n  }\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\r\n// `ng build ---prod` replaces `environment.ts` with `environment.prod.ts`.\r\n// The list of file replacements can be found in `angular.json`.\r\n\r\nexport const environment = {\r\n  production: false\r\n};\r\n\r\n/*\r\n * In development mode, for easier debugging, you can ignore zone related error\r\n * stack frames such as `zone.run`/`zoneDelegate.invokeTask` by importing the\r\n * below file. Don't forget to comment it out in production mode\r\n * because it will have a performance impact when errors are thrown\r\n */\r\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\r\n","import { enableProdMode } from '@angular/core';\r\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\r\n\r\nimport { AppModule } from './app/app.module';\r\nimport { environment } from './environments/environment';\r\n\r\nif (environment.production) {\r\n  enableProdMode();\r\n}\r\n\r\nplatformBrowserDynamic().bootstrapModule(AppModule)\r\n  .catch(err => console.log(err));\r\n"],"sourceRoot":""}